#ifndef DC_H
#define DC_H

#include <QTimer>
#include <QHash>
#include "dcconnection.h"
#include "../../autogenerated/mtproto/decompiler/mtprotodecompiler.h"
#include "../mtprotorequest.h"
#include "../mtprotoreply.h"
#include "../mtprotoservicehandler.h"

#define CurrentDeltaTime(servertime) (QDateTime::currentDateTime().toTime_t() - servertime)

class DC : public DCConnection
{
    Q_OBJECT

    public:
        explicit DC(const QString& address, qint16 port, int dcid, QObject *parent = 0);

    public:
        void sendPendingRequests();
        void send(MTProtoRequest *req);
        void takeRequests(TLLong sessionid, DC* fromdc);

    private:
        void decompile(int direction, TLLong messageid, const QByteArray &body);
        void handleReply(const QByteArray& message);
        void assignMessageId(MTProtoRequest *req);
        void checkSyncronization(MTProtoReply* mtreply);
        TLInt generateContentMsgNo();
        TLInt getPacketLength();

    private slots:
        void repeatLastRequest();
        void handleReply(MTProtoReply* mtreply);
        void onDCReadyRead();

    signals:
        void authorizationReply(MTProtoReply* mtreply);
        void configurationReceived(Config* config);
        void migrateDC(int fromdcid, int dcid);

    private:
        QList<MTProtoRequest*> _pendingrequests;
        QHash<TLLong, MTProtoRequest*> _sentrequests;
        MTProtoServiceHandler* _mtservicehandler;
        MTProtoDecompiler* _mtdecompiler;
        TLInt _lastpacketlen;
        TLInt _contentmsgno;
        TLLong _lastmsgid;
        int _dcid;

    private:
        static TLLong _lastclientmsgid;
};

#endif // DC_H
