#include "cachefetcher.h"
#include "../autogenerated/telegramapi.h"
#include "../mtproto/dc/dcsessionmanager.h"
#include "../types/telegramhelper.h"

CacheFetcher::CacheFetcher(QObject *parent) : QObject(parent), _update(NULL)
{

}

void CacheFetcher::getFullChat(Chat *chat)
{
    if(TelegramHelper::isChannel(chat))
    {
        InputChannel* inputchannel = TelegramHelper::inputChannel(chat);
        MTProtoRequest* req = TelegramAPI::channelsGetFullChannel(DC_MainSession, inputchannel);
        inputchannel->deleteLater();
        connect(req, &MTProtoRequest::replied, this, &CacheFetcher::onChatFull);
        return;
    }

    MTProtoRequest* req = TelegramAPI::messagesGetFullChat(DC_MainSession, chat->id());
    connect(req, &MTProtoRequest::replied, this, &CacheFetcher::onChatFull);
}

void CacheFetcher::onChatFull(MTProtoReply *mtreply)
{
    MessagesChatFull chatfull;
    chatfull.read(mtreply);

    emit usersReceived(chatfull.users());
    emit chatFullReceived(chatfull.fullChat());
}
