// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "badmsgnotification.h"


BadMsgNotification::BadMsgNotification(QObject* parent) : TelegramObject(parent)
{
	this->_bad_msg_id = 0;
	this->_bad_msg_seqno = 0;
	this->_error_code = 0;
	this->_new_server_salt = 0;
}

void BadMsgNotification::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == BadMsgNotification::ctorBadMsgNotification) ||
		 (this->_constructorid == BadMsgNotification::ctorBadServerSalt));
	
	if(this->_constructorid == BadMsgNotification::ctorBadMsgNotification)
	{
		this->_bad_msg_id = mtstream->readTLLong();
		this->_bad_msg_seqno = mtstream->readTLInt();
		this->_error_code = mtstream->readTLInt();
	}
	else if(this->_constructorid == BadMsgNotification::ctorBadServerSalt)
	{
		this->_bad_msg_id = mtstream->readTLLong();
		this->_bad_msg_seqno = mtstream->readTLInt();
		this->_error_code = mtstream->readTLInt();
		this->_new_server_salt = mtstream->readTLLong();
	}
}

void BadMsgNotification::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == BadMsgNotification::ctorBadMsgNotification) ||
		 (this->_constructorid == BadMsgNotification::ctorBadServerSalt));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == BadMsgNotification::ctorBadMsgNotification)
	{
		mtstream->writeTLLong(this->_bad_msg_id);
		mtstream->writeTLInt(this->_bad_msg_seqno);
		mtstream->writeTLInt(this->_error_code);
	}
	else if(this->_constructorid == BadMsgNotification::ctorBadServerSalt)
	{
		mtstream->writeTLLong(this->_bad_msg_id);
		mtstream->writeTLInt(this->_bad_msg_seqno);
		mtstream->writeTLInt(this->_error_code);
		mtstream->writeTLLong(this->_new_server_salt);
	}
}

void BadMsgNotification::compileFlags() 
{
	
}

TLLong BadMsgNotification::badMsgId() const
{
	return this->_bad_msg_id;
}

void BadMsgNotification::setBadMsgId(TLLong bad_msg_id) 
{
	if(this->_bad_msg_id == bad_msg_id)
		return;

	this->_bad_msg_id = bad_msg_id;
	emit badMsgIdChanged();
}

TLInt BadMsgNotification::badMsgSeqno() const
{
	return this->_bad_msg_seqno;
}

void BadMsgNotification::setBadMsgSeqno(TLInt bad_msg_seqno) 
{
	if(this->_bad_msg_seqno == bad_msg_seqno)
		return;

	this->_bad_msg_seqno = bad_msg_seqno;
	emit badMsgSeqnoChanged();
}

TLInt BadMsgNotification::errorCode() const
{
	return this->_error_code;
}

void BadMsgNotification::setErrorCode(TLInt error_code) 
{
	if(this->_error_code == error_code)
		return;

	this->_error_code = error_code;
	emit errorCodeChanged();
}

TLLong BadMsgNotification::newServerSalt() const
{
	return this->_new_server_salt;
}

void BadMsgNotification::setNewServerSalt(TLLong new_server_salt) 
{
	if(this->_new_server_salt == new_server_salt)
		return;

	this->_new_server_salt = new_server_salt;
	emit newServerSaltChanged();
}

