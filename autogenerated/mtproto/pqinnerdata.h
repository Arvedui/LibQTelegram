#ifndef PQINNERDATA_H
#define PQINNERDATA_H

// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "../../types/basic.h"
#include "../../types/telegramobject.h"

class PQInnerData: public TelegramObject
{
	Q_OBJECT

	Q_PROPERTY(TLString pq READ pq WRITE setPq NOTIFY pqChanged)
	Q_PROPERTY(TLString p READ p WRITE setP NOTIFY pChanged)
	Q_PROPERTY(TLString q READ q WRITE setQ NOTIFY qChanged)
	Q_PROPERTY(TLInt128 nonce READ nonce WRITE setNonce NOTIFY nonceChanged)
	Q_PROPERTY(TLInt128 serverNonce READ serverNonce WRITE setServerNonce NOTIFY serverNonceChanged)
	Q_PROPERTY(TLInt256 newNonce READ newNonce WRITE setNewNonce NOTIFY newNonceChanged)

	public:
		enum Constructors {
			ctorPQInnerData = 0x83c95aec,
		};

	public:
		explicit PQInnerData(QObject* parent = 0);
		virtual void read(MTProtoStream* mtstream);
		virtual void write(MTProtoStream* mtstream);
	protected:
		virtual void compileFlags();
	public:
		TLString pq() const;
		void setPq(TLString pq);
		TLString p() const;
		void setP(TLString p);
		TLString q() const;
		void setQ(TLString q);
		TLInt128 nonce() const;
		void setNonce(TLInt128 nonce);
		TLInt128 serverNonce() const;
		void setServerNonce(TLInt128 server_nonce);
		TLInt256 newNonce() const;
		void setNewNonce(TLInt256 new_nonce);

	signals:
		void pqChanged();
		void pChanged();
		void qChanged();
		void nonceChanged();
		void serverNonceChanged();
		void newNonceChanged();

	private:
		TLString _pq;
		TLString _p;
		TLString _q;
		TLInt128 _nonce;
		TLInt128 _server_nonce;
		TLInt256 _new_nonce;

};

#endif // PQINNERDATA_H
