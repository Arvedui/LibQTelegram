// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "rpcdropanswer.h"


RpcDropAnswer::RpcDropAnswer(QObject* parent) : TelegramObject(parent)
{
	this->_msg_id = 0;
	this->_seq_no = 0;
	this->_bytes = 0;
}

void RpcDropAnswer::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == RpcDropAnswer::CtorRpcAnswerUnknown) ||
		 (this->_constructorid == RpcDropAnswer::CtorRpcAnswerDroppedRunning) ||
		 (this->_constructorid == RpcDropAnswer::CtorRpcAnswerDropped));
	
	if(this->_constructorid == RpcDropAnswer::CtorRpcAnswerDropped)
	{
		this->_msg_id = mtstream->readTLLong();
		this->_seq_no = mtstream->readTLInt();
		this->_bytes = mtstream->readTLInt();
	}
}

void RpcDropAnswer::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == RpcDropAnswer::CtorRpcAnswerUnknown) ||
		 (this->_constructorid == RpcDropAnswer::CtorRpcAnswerDroppedRunning) ||
		 (this->_constructorid == RpcDropAnswer::CtorRpcAnswerDropped));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == RpcDropAnswer::CtorRpcAnswerDropped)
	{
		mtstream->writeTLLong(this->_msg_id);
		mtstream->writeTLInt(this->_seq_no);
		mtstream->writeTLInt(this->_bytes);
	}
}

void RpcDropAnswer::compileFlags() 
{
	
}

TLLong RpcDropAnswer::msgId() const
{
	return this->_msg_id;
}

void RpcDropAnswer::setMsgId(TLLong msg_id) 
{
	if(this->_msg_id == msg_id)
		return;

	this->_msg_id = msg_id;
	emit msgIdChanged();
}

TLInt RpcDropAnswer::seqNo() const
{
	return this->_seq_no;
}

void RpcDropAnswer::setSeqNo(TLInt seq_no) 
{
	if(this->_seq_no == seq_no)
		return;

	this->_seq_no = seq_no;
	emit seqNoChanged();
}

TLInt RpcDropAnswer::bytes() const
{
	return this->_bytes;
}

void RpcDropAnswer::setBytes(TLInt bytes) 
{
	if(this->_bytes == bytes)
		return;

	this->_bytes = bytes;
	emit bytesChanged();
}

