// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "newsession.h"


NewSession::NewSession(QObject* parent) : TelegramObject(parent)
{
	this->_first_msg_id = 0;
	this->_unique_id = 0;
	this->_server_salt = 0;
	this->_constructorid = NewSession::CtorNewSessionCreated;
}

void NewSession::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == NewSession::CtorNewSessionCreated));
	
	if(this->_constructorid == NewSession::CtorNewSessionCreated)
	{
		this->_first_msg_id = mtstream->readTLLong();
		this->_unique_id = mtstream->readTLLong();
		this->_server_salt = mtstream->readTLLong();
	}
}

void NewSession::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == NewSession::CtorNewSessionCreated));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == NewSession::CtorNewSessionCreated)
	{
		mtstream->writeTLLong(this->_first_msg_id);
		mtstream->writeTLLong(this->_unique_id);
		mtstream->writeTLLong(this->_server_salt);
	}
}

void NewSession::compileFlags() 
{
	
}

TLLong NewSession::firstMsgId() const
{
	return this->_first_msg_id;
}

void NewSession::setFirstMsgId(TLLong first_msg_id) 
{
	if(this->_first_msg_id == first_msg_id)
		return;

	this->_first_msg_id = first_msg_id;
	emit firstMsgIdChanged();
}

TLLong NewSession::uniqueId() const
{
	return this->_unique_id;
}

void NewSession::setUniqueId(TLLong unique_id) 
{
	if(this->_unique_id == unique_id)
		return;

	this->_unique_id = unique_id;
	emit uniqueIdChanged();
}

TLLong NewSession::serverSalt() const
{
	return this->_server_salt;
}

void NewSession::setServerSalt(TLLong server_salt) 
{
	if(this->_server_salt == server_salt)
		return;

	this->_server_salt = server_salt;
	emit serverSaltChanged();
}

