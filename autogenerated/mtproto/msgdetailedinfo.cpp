// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "msgdetailedinfo.h"


MsgDetailedInfo::MsgDetailedInfo(QObject* parent) : TelegramObject(parent)
{
	this->_msg_id = 0;
	this->_answer_msg_id = 0;
	this->_bytes = 0;
	this->_status = 0;
}

void MsgDetailedInfo::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == MsgDetailedInfo::CtorMsgDetailedInfo) ||
		 (this->_constructorid == MsgDetailedInfo::CtorMsgNewDetailedInfo));
	
	if(this->_constructorid == MsgDetailedInfo::CtorMsgDetailedInfo)
	{
		this->_msg_id = mtstream->readTLLong();
		this->_answer_msg_id = mtstream->readTLLong();
		this->_bytes = mtstream->readTLInt();
		this->_status = mtstream->readTLInt();
	}
	else if(this->_constructorid == MsgDetailedInfo::CtorMsgNewDetailedInfo)
	{
		this->_answer_msg_id = mtstream->readTLLong();
		this->_bytes = mtstream->readTLInt();
		this->_status = mtstream->readTLInt();
	}
}

void MsgDetailedInfo::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == MsgDetailedInfo::CtorMsgDetailedInfo) ||
		 (this->_constructorid == MsgDetailedInfo::CtorMsgNewDetailedInfo));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == MsgDetailedInfo::CtorMsgDetailedInfo)
	{
		mtstream->writeTLLong(this->_msg_id);
		mtstream->writeTLLong(this->_answer_msg_id);
		mtstream->writeTLInt(this->_bytes);
		mtstream->writeTLInt(this->_status);
	}
	else if(this->_constructorid == MsgDetailedInfo::CtorMsgNewDetailedInfo)
	{
		mtstream->writeTLLong(this->_answer_msg_id);
		mtstream->writeTLInt(this->_bytes);
		mtstream->writeTLInt(this->_status);
	}
}

void MsgDetailedInfo::compileFlags() 
{
	
}

TLLong MsgDetailedInfo::msgId() const
{
	return this->_msg_id;
}

void MsgDetailedInfo::setMsgId(TLLong msg_id) 
{
	if(this->_msg_id == msg_id)
		return;

	this->_msg_id = msg_id;
	emit msgIdChanged();
}

TLLong MsgDetailedInfo::answerMsgId() const
{
	return this->_answer_msg_id;
}

void MsgDetailedInfo::setAnswerMsgId(TLLong answer_msg_id) 
{
	if(this->_answer_msg_id == answer_msg_id)
		return;

	this->_answer_msg_id = answer_msg_id;
	emit answerMsgIdChanged();
}

TLInt MsgDetailedInfo::bytes() const
{
	return this->_bytes;
}

void MsgDetailedInfo::setBytes(TLInt bytes) 
{
	if(this->_bytes == bytes)
		return;

	this->_bytes = bytes;
	emit bytesChanged();
}

TLInt MsgDetailedInfo::status() const
{
	return this->_status;
}

void MsgDetailedInfo::setStatus(TLInt status) 
{
	if(this->_status == status)
		return;

	this->_status = status;
	emit statusChanged();
}

