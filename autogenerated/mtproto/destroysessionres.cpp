// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "destroysessionres.h"


DestroySessionRes::DestroySessionRes(QObject* parent) : TelegramObject(parent)
{
	this->_session_id = 0;
}

void DestroySessionRes::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == DestroySessionRes::ctorDestroySessionOk) ||
		 (this->_constructorid == DestroySessionRes::ctorDestroySessionNone));
	
	if(this->_constructorid == DestroySessionRes::ctorDestroySessionOk)
		this->_session_id = mtstream->readTLLong();
	else if(this->_constructorid == DestroySessionRes::ctorDestroySessionNone)
		this->_session_id = mtstream->readTLLong();
}

void DestroySessionRes::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == DestroySessionRes::ctorDestroySessionOk) ||
		 (this->_constructorid == DestroySessionRes::ctorDestroySessionNone));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == DestroySessionRes::ctorDestroySessionOk)
		mtstream->writeTLLong(this->_session_id);
	else if(this->_constructorid == DestroySessionRes::ctorDestroySessionNone)
		mtstream->writeTLLong(this->_session_id);
}

void DestroySessionRes::compileFlags() 
{
	
}

TLLong DestroySessionRes::sessionId() const
{
	return this->_session_id;
}

void DestroySessionRes::setSessionId(TLLong session_id) 
{
	if(this->_session_id == session_id)
		return;

	this->_session_id = session_id;
	emit sessionIdChanged();
}

