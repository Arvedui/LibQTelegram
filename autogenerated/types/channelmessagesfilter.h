#ifndef CHANNELMESSAGESFILTER_H
#define CHANNELMESSAGESFILTER_H

// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "../../types/telegramobject.h"
#include "messagerange.h"
#include "../../types/basic.h"

class ChannelMessagesFilter: public TelegramObject
{
	Q_OBJECT

	Q_PROPERTY(TLInt flags READ flags WRITE setFlags NOTIFY flagsChanged)
	Q_PROPERTY(TLTrue isExcludeNewMessages READ isExcludeNewMessages WRITE setIsExcludeNewMessages NOTIFY isExcludeNewMessagesChanged)
	Q_PROPERTY(TLVector<MessageRange*> ranges READ ranges WRITE setRanges NOTIFY rangesChanged)

	Q_ENUMS(Constructors)

	public:
		enum Constructors {
			CtorChannelMessagesFilterEmpty = 0x94d42ee7,
			CtorChannelMessagesFilter = 0xcd77d957,
		};

	public:
		explicit ChannelMessagesFilter(QObject* parent = 0);
		virtual void read(MTProtoStream* mtstream);
		virtual void write(MTProtoStream* mtstream);
	protected:
		virtual void compileFlags();
	public:
		TLInt flags() const;
		void setFlags(TLInt flags);
		TLTrue isExcludeNewMessages() const;
		void setIsExcludeNewMessages(TLTrue is_exclude_new_messages);
		const TLVector<MessageRange*>& ranges() const;
		void setRanges(const TLVector<MessageRange*>& ranges);

	signals:
		void flagsChanged();
		void isExcludeNewMessagesChanged();
		void rangesChanged();

	private:
		TLInt _flags;
		TLTrue _is_exclude_new_messages;
		TLVector<MessageRange*> _ranges;

};

#endif // CHANNELMESSAGESFILTER_H
