// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "toppeer.h"


TopPeer::TopPeer(QObject* parent) : TelegramObject(parent)
{
	this->_peer = NULL;
	this->_rating = 0;
	this->_constructorid = TopPeer::ctorTopPeer;
}

void TopPeer::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == TopPeer::ctorTopPeer));
	
	if(this->_constructorid == TopPeer::ctorTopPeer)
	{
		RESET_TLTYPE(Peer, this->_peer);
		this->_peer->read(mtstream);
		this->_rating = mtstream->readTLDouble();
	}
}

void TopPeer::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == TopPeer::ctorTopPeer));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == TopPeer::ctorTopPeer)
	{
		Q_ASSERT(this->_peer != NULL);
		this->_peer->write(mtstream);
		mtstream->writeTLDouble(this->_rating);
	}
}

void TopPeer::compileFlags() 
{
	
}

Peer* TopPeer::peer() const
{
	return this->_peer;
}

void TopPeer::setPeer(Peer* peer) 
{
	if(this->_peer == peer)
		return;

	this->_peer = peer;
	emit peerChanged();
}

TLDouble TopPeer::rating() const
{
	return this->_rating;
}

void TopPeer::setRating(TLDouble rating) 
{
	if(this->_rating == rating)
		return;

	this->_rating = rating;
	emit ratingChanged();
}

