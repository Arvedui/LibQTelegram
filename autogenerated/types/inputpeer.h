#ifndef INPUTPEER_H
#define INPUTPEER_H

// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "../../types/basic.h"
#include "../../types/telegramobject.h"

class InputPeer: public TelegramObject
{
	Q_OBJECT

	Q_PROPERTY(TLInt chatId READ chatId WRITE setChatId NOTIFY chatIdChanged)
	Q_PROPERTY(TLInt userId READ userId WRITE setUserId NOTIFY userIdChanged)
	Q_PROPERTY(TLLong accessHash READ accessHash WRITE setAccessHash NOTIFY accessHashChanged)
	Q_PROPERTY(TLInt channelId READ channelId WRITE setChannelId NOTIFY channelIdChanged)

	public:
		enum Constructors {
			ctorInputPeerEmpty = 0x7f3b18ea,
			ctorInputPeerSelf = 0x7da07ec9,
			ctorInputPeerChat = 0x179be863,
			ctorInputPeerUser = 0x7b8e7de6,
			ctorInputPeerChannel = 0x20adaef8,
		};

	public:
		explicit InputPeer(QObject* parent = 0);
		virtual void read(MTProtoStream* mtstream);
		virtual void write(MTProtoStream* mtstream);
	protected:
		virtual void compileFlags();
	public:
		TLInt chatId() const;
		void setChatId(TLInt chat_id);
		TLInt userId() const;
		void setUserId(TLInt user_id);
		TLLong accessHash() const;
		void setAccessHash(TLLong access_hash);
		TLInt channelId() const;
		void setChannelId(TLInt channel_id);

	signals:
		void chatIdChanged();
		void userIdChanged();
		void accessHashChanged();
		void channelIdChanged();

	private:
		TLInt _chat_id;
		TLInt _user_id;
		TLLong _access_hash;
		TLInt _channel_id;

};

#endif // INPUTPEER_H
