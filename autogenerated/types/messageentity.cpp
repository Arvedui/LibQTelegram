// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "messageentity.h"


MessageEntity::MessageEntity(QObject* parent) : TelegramObject(parent)
{
	this->_offset = 0;
	this->_length = 0;
	this->_user_id_messageentitymentionname = 0;
	this->_user_id_inputmessageentitymentionname = NULL;
}

void MessageEntity::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == MessageEntity::ctorMessageEntityUnknown) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityMention) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityHashtag) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityBotCommand) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityUrl) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityEmail) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityBold) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityItalic) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityCode) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityPre) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityTextUrl) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityMentionName) ||
		 (this->_constructorid == MessageEntity::ctorInputMessageEntityMentionName));
	
	if(this->_constructorid == MessageEntity::ctorMessageEntityUnknown)
	{
		this->_offset = mtstream->readTLInt();
		this->_length = mtstream->readTLInt();
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityMention)
	{
		this->_offset = mtstream->readTLInt();
		this->_length = mtstream->readTLInt();
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityHashtag)
	{
		this->_offset = mtstream->readTLInt();
		this->_length = mtstream->readTLInt();
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityBotCommand)
	{
		this->_offset = mtstream->readTLInt();
		this->_length = mtstream->readTLInt();
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityUrl)
	{
		this->_offset = mtstream->readTLInt();
		this->_length = mtstream->readTLInt();
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityEmail)
	{
		this->_offset = mtstream->readTLInt();
		this->_length = mtstream->readTLInt();
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityBold)
	{
		this->_offset = mtstream->readTLInt();
		this->_length = mtstream->readTLInt();
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityItalic)
	{
		this->_offset = mtstream->readTLInt();
		this->_length = mtstream->readTLInt();
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityCode)
	{
		this->_offset = mtstream->readTLInt();
		this->_length = mtstream->readTLInt();
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityPre)
	{
		this->_offset = mtstream->readTLInt();
		this->_length = mtstream->readTLInt();
		this->_language = mtstream->readTLString();
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityTextUrl)
	{
		this->_offset = mtstream->readTLInt();
		this->_length = mtstream->readTLInt();
		this->_url = mtstream->readTLString();
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityMentionName)
	{
		this->_offset = mtstream->readTLInt();
		this->_length = mtstream->readTLInt();
		this->_user_id_messageentitymentionname = mtstream->readTLInt();
	}
	else if(this->_constructorid == MessageEntity::ctorInputMessageEntityMentionName)
	{
		this->_offset = mtstream->readTLInt();
		this->_length = mtstream->readTLInt();
		TLInt user_id_inputmessageentitymentionname_ctor = mtstream->peekTLConstructor();
		
		if(user_id_inputmessageentitymentionname_ctor != TLTypes::Null)
		{
			RESET_TLTYPE(InputUser, this->_user_id_inputmessageentitymentionname);
			this->_user_id_inputmessageentitymentionname->read(mtstream);
		}
		else
		{
			NULL_TLTYPE(this->_user_id_inputmessageentitymentionname);
			mtstream->readTLConstructor(); // Skip Null
		}
	}
}

void MessageEntity::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == MessageEntity::ctorMessageEntityUnknown) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityMention) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityHashtag) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityBotCommand) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityUrl) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityEmail) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityBold) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityItalic) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityCode) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityPre) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityTextUrl) ||
		 (this->_constructorid == MessageEntity::ctorMessageEntityMentionName) ||
		 (this->_constructorid == MessageEntity::ctorInputMessageEntityMentionName));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == MessageEntity::ctorMessageEntityUnknown)
	{
		mtstream->writeTLInt(this->_offset);
		mtstream->writeTLInt(this->_length);
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityMention)
	{
		mtstream->writeTLInt(this->_offset);
		mtstream->writeTLInt(this->_length);
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityHashtag)
	{
		mtstream->writeTLInt(this->_offset);
		mtstream->writeTLInt(this->_length);
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityBotCommand)
	{
		mtstream->writeTLInt(this->_offset);
		mtstream->writeTLInt(this->_length);
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityUrl)
	{
		mtstream->writeTLInt(this->_offset);
		mtstream->writeTLInt(this->_length);
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityEmail)
	{
		mtstream->writeTLInt(this->_offset);
		mtstream->writeTLInt(this->_length);
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityBold)
	{
		mtstream->writeTLInt(this->_offset);
		mtstream->writeTLInt(this->_length);
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityItalic)
	{
		mtstream->writeTLInt(this->_offset);
		mtstream->writeTLInt(this->_length);
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityCode)
	{
		mtstream->writeTLInt(this->_offset);
		mtstream->writeTLInt(this->_length);
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityPre)
	{
		mtstream->writeTLInt(this->_offset);
		mtstream->writeTLInt(this->_length);
		mtstream->writeTLString(this->_language);
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityTextUrl)
	{
		mtstream->writeTLInt(this->_offset);
		mtstream->writeTLInt(this->_length);
		mtstream->writeTLString(this->_url);
	}
	else if(this->_constructorid == MessageEntity::ctorMessageEntityMentionName)
	{
		mtstream->writeTLInt(this->_offset);
		mtstream->writeTLInt(this->_length);
		mtstream->writeTLInt(this->_user_id_messageentitymentionname);
	}
	else if(this->_constructorid == MessageEntity::ctorInputMessageEntityMentionName)
	{
		mtstream->writeTLInt(this->_offset);
		mtstream->writeTLInt(this->_length);
		if(this->_user_id_inputmessageentitymentionname != NULL)
			this->_user_id_inputmessageentitymentionname->write(mtstream);
		else
			mtstream->writeTLConstructor(TLTypes::Null);
	}
}

void MessageEntity::compileFlags() 
{
	
}

TLInt MessageEntity::offset() const
{
	return this->_offset;
}

void MessageEntity::setOffset(TLInt offset) 
{
	if(this->_offset == offset)
		return;

	this->_offset = offset;
	emit offsetChanged();
}

TLInt MessageEntity::length() const
{
	return this->_length;
}

void MessageEntity::setLength(TLInt length) 
{
	if(this->_length == length)
		return;

	this->_length = length;
	emit lengthChanged();
}

TLString MessageEntity::language() const
{
	return this->_language;
}

void MessageEntity::setLanguage(TLString language) 
{
	if(this->_language == language)
		return;

	this->_language = language;
	emit languageChanged();
}

TLString MessageEntity::url() const
{
	return this->_url;
}

void MessageEntity::setUrl(TLString url) 
{
	if(this->_url == url)
		return;

	this->_url = url;
	emit urlChanged();
}

TLInt MessageEntity::userIdMessageentitymentionname() const
{
	return this->_user_id_messageentitymentionname;
}

void MessageEntity::setUserIdMessageentitymentionname(TLInt user_id_messageentitymentionname) 
{
	if(this->_user_id_messageentitymentionname == user_id_messageentitymentionname)
		return;

	this->_user_id_messageentitymentionname = user_id_messageentitymentionname;
	emit userIdMessageentitymentionnameChanged();
}

InputUser* MessageEntity::userIdInputmessageentitymentionname() const
{
	return this->_user_id_inputmessageentitymentionname;
}

void MessageEntity::setUserIdInputmessageentitymentionname(InputUser* user_id_inputmessageentitymentionname) 
{
	if(this->_user_id_inputmessageentitymentionname == user_id_inputmessageentitymentionname)
		return;

	this->_user_id_inputmessageentitymentionname = user_id_inputmessageentitymentionname;
	emit userIdInputmessageentitymentionnameChanged();
}

