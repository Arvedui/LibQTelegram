#ifndef USERFULL_H
#define USERFULL_H

// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "../../types/basic.h"
#include "../../types/telegramobject.h"
#include "botinfo.h"
#include "user.h"
#include "photo.h"
#include "contactslink.h"
#include "peernotifysettings.h"

class UserFull: public TelegramObject
{
	Q_OBJECT

	Q_PROPERTY(TLInt flags READ flags WRITE setFlags NOTIFY flagsChanged)
	Q_PROPERTY(TLTrue isBlocked READ isBlocked WRITE setIsBlocked NOTIFY isBlockedChanged)
	Q_PROPERTY(User* user READ user WRITE setUser NOTIFY userChanged)
	Q_PROPERTY(TLString about READ about WRITE setAbout NOTIFY aboutChanged)
	Q_PROPERTY(ContactsLink* link READ link WRITE setLink NOTIFY linkChanged)
	Q_PROPERTY(Photo* profilePhoto READ profilePhoto WRITE setProfilePhoto NOTIFY profilePhotoChanged)
	Q_PROPERTY(PeerNotifySettings* notifySettings READ notifySettings WRITE setNotifySettings NOTIFY notifySettingsChanged)
	Q_PROPERTY(BotInfo* botInfo READ botInfo WRITE setBotInfo NOTIFY botInfoChanged)

	Q_ENUMS(Constructors)

	public:
		enum Constructors {
			CtorUserFull = 0x5932fc03,
		};

	public:
		explicit UserFull(QObject* parent = 0);
		virtual void read(MTProtoStream* mtstream);
		virtual void write(MTProtoStream* mtstream);
	protected:
		virtual void compileFlags();
	public:
		TLInt flags() const;
		void setFlags(TLInt flags);
		TLTrue isBlocked() const;
		void setIsBlocked(TLTrue is_blocked);
		User* user() const;
		void setUser(User* user);
		TLString about() const;
		void setAbout(TLString about);
		ContactsLink* link() const;
		void setLink(ContactsLink* link);
		Photo* profilePhoto() const;
		void setProfilePhoto(Photo* profile_photo);
		PeerNotifySettings* notifySettings() const;
		void setNotifySettings(PeerNotifySettings* notify_settings);
		BotInfo* botInfo() const;
		void setBotInfo(BotInfo* bot_info);

	signals:
		void flagsChanged();
		void isBlockedChanged();
		void userChanged();
		void aboutChanged();
		void linkChanged();
		void profilePhotoChanged();
		void notifySettingsChanged();
		void botInfoChanged();

	private:
		TLInt _flags;
		TLTrue _is_blocked;
		User* _user;
		TLString _about;
		ContactsLink* _link;
		Photo* _profile_photo;
		PeerNotifySettings* _notify_settings;
		BotInfo* _bot_info;

};

#endif // USERFULL_H
