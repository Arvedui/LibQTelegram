// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "inputchatphoto.h"


InputChatPhoto::InputChatPhoto(QObject* parent) : TelegramObject(parent)
{
	this->_file = NULL;
	this->_id = NULL;
}

void InputChatPhoto::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == InputChatPhoto::ctorInputChatPhotoEmpty) ||
		 (this->_constructorid == InputChatPhoto::ctorInputChatUploadedPhoto) ||
		 (this->_constructorid == InputChatPhoto::ctorInputChatPhoto));
	
	if(this->_constructorid == InputChatPhoto::ctorInputChatUploadedPhoto)
	{
		RESET_TLTYPE(InputFile, this->_file);
		this->_file->read(mtstream);
	}
	else if(this->_constructorid == InputChatPhoto::ctorInputChatPhoto)
	{
		RESET_TLTYPE(InputPhoto, this->_id);
		this->_id->read(mtstream);
	}
}

void InputChatPhoto::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == InputChatPhoto::ctorInputChatPhotoEmpty) ||
		 (this->_constructorid == InputChatPhoto::ctorInputChatUploadedPhoto) ||
		 (this->_constructorid == InputChatPhoto::ctorInputChatPhoto));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == InputChatPhoto::ctorInputChatUploadedPhoto)
	{
		Q_ASSERT(this->_file != NULL);
		this->_file->write(mtstream);
	}
	else if(this->_constructorid == InputChatPhoto::ctorInputChatPhoto)
	{
		Q_ASSERT(this->_id != NULL);
		this->_id->write(mtstream);
	}
}

void InputChatPhoto::compileFlags() 
{
	
}

InputFile* InputChatPhoto::file() const
{
	return this->_file;
}

void InputChatPhoto::setFile(InputFile* file) 
{
	if(this->_file == file)
		return;

	this->_file = file;
	emit fileChanged();
}

InputPhoto* InputChatPhoto::id() const
{
	return this->_id;
}

void InputChatPhoto::setId(InputPhoto* id) 
{
	if(this->_id == id)
		return;

	this->_id = id;
	emit idChanged();
}

