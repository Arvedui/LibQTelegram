// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "userstatus.h"


UserStatus::UserStatus(QObject* parent) : TelegramObject(parent)
{
	this->_expires = 0;
	this->_was_online = 0;
}

void UserStatus::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == UserStatus::CtorUserStatusEmpty) ||
		 (this->_constructorid == UserStatus::CtorUserStatusOnline) ||
		 (this->_constructorid == UserStatus::CtorUserStatusOffline) ||
		 (this->_constructorid == UserStatus::CtorUserStatusRecently) ||
		 (this->_constructorid == UserStatus::CtorUserStatusLastWeek) ||
		 (this->_constructorid == UserStatus::CtorUserStatusLastMonth));
	
	if(this->_constructorid == UserStatus::CtorUserStatusOnline)
		this->_expires = mtstream->readTLInt();
	else if(this->_constructorid == UserStatus::CtorUserStatusOffline)
		this->_was_online = mtstream->readTLInt();
}

void UserStatus::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == UserStatus::CtorUserStatusEmpty) ||
		 (this->_constructorid == UserStatus::CtorUserStatusOnline) ||
		 (this->_constructorid == UserStatus::CtorUserStatusOffline) ||
		 (this->_constructorid == UserStatus::CtorUserStatusRecently) ||
		 (this->_constructorid == UserStatus::CtorUserStatusLastWeek) ||
		 (this->_constructorid == UserStatus::CtorUserStatusLastMonth));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == UserStatus::CtorUserStatusOnline)
		mtstream->writeTLInt(this->_expires);
	else if(this->_constructorid == UserStatus::CtorUserStatusOffline)
		mtstream->writeTLInt(this->_was_online);
}

void UserStatus::compileFlags() 
{
	
}

TLInt UserStatus::expires() const
{
	return this->_expires;
}

void UserStatus::setExpires(TLInt expires) 
{
	if(this->_expires == expires)
		return;

	this->_expires = expires;
	emit expiresChanged();
}

TLInt UserStatus::wasOnline() const
{
	return this->_was_online;
}

void UserStatus::setWasOnline(TLInt was_online) 
{
	if(this->_was_online == was_online)
		return;

	this->_was_online = was_online;
	emit wasOnlineChanged();
}

