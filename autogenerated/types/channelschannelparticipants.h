#ifndef CHANNELSCHANNELPARTICIPANTS_H
#define CHANNELSCHANNELPARTICIPANTS_H

// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "../../types/basic.h"
#include "../../types/telegramobject.h"
#include "channelparticipant.h"
#include "user.h"

class ChannelsChannelParticipants: public TelegramObject
{
	Q_OBJECT

	Q_PROPERTY(TLInt count READ count WRITE setCount NOTIFY countChanged)
	Q_PROPERTY(TLVector<ChannelParticipant*> participants READ participants WRITE setParticipants NOTIFY participantsChanged)
	Q_PROPERTY(TLVector<User*> users READ users WRITE setUsers NOTIFY usersChanged)

	Q_ENUMS(Constructors)

	public:
		enum Constructors {
			CtorChannelsChannelParticipants = 0xf56ee2a8,
		};

	public:
		explicit ChannelsChannelParticipants(QObject* parent = 0);
		virtual void read(MTProtoStream* mtstream);
		virtual void write(MTProtoStream* mtstream);
	protected:
		virtual void compileFlags();
	public:
		TLInt count() const;
		void setCount(TLInt count);
		const TLVector<ChannelParticipant*>& participants() const;
		void setParticipants(const TLVector<ChannelParticipant*>& participants);
		const TLVector<User*>& users() const;
		void setUsers(const TLVector<User*>& users);

	signals:
		void countChanged();
		void participantsChanged();
		void usersChanged();

	private:
		TLInt _count;
		TLVector<ChannelParticipant*> _participants;
		TLVector<User*> _users;

};

#endif // CHANNELSCHANNELPARTICIPANTS_H
