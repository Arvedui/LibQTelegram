// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "disabledfeature.h"


DisabledFeature::DisabledFeature(QObject* parent) : TelegramObject(parent)
{
	this->_constructorid = DisabledFeature::ctorDisabledFeature;
}

void DisabledFeature::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == DisabledFeature::ctorDisabledFeature));
	
	if(this->_constructorid == DisabledFeature::ctorDisabledFeature)
	{
		this->_feature = mtstream->readTLString();
		this->_description = mtstream->readTLString();
	}
}

void DisabledFeature::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == DisabledFeature::ctorDisabledFeature));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == DisabledFeature::ctorDisabledFeature)
	{
		mtstream->writeTLString(this->_feature);
		mtstream->writeTLString(this->_description);
	}
}

void DisabledFeature::compileFlags() 
{
	
}

TLString DisabledFeature::feature() const
{
	return this->_feature;
}

void DisabledFeature::setFeature(TLString feature) 
{
	if(this->_feature == feature)
		return;

	this->_feature = feature;
	emit featureChanged();
}

TLString DisabledFeature::description() const
{
	return this->_description;
}

void DisabledFeature::setDescription(TLString description) 
{
	if(this->_description == description)
		return;

	this->_description = description;
	emit descriptionChanged();
}

