#ifndef INPUTPEERNOTIFYSETTINGS_H
#define INPUTPEERNOTIFYSETTINGS_H

// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "../../types/basic.h"
#include "../../types/telegramobject.h"

class InputPeerNotifySettings: public TelegramObject
{
	Q_OBJECT

	Q_PROPERTY(TLInt flags READ flags WRITE setFlags NOTIFY flagsChanged)
	Q_PROPERTY(TLTrue isShowPreviews READ isShowPreviews WRITE setIsShowPreviews NOTIFY isShowPreviewsChanged)
	Q_PROPERTY(TLTrue isSilent READ isSilent WRITE setIsSilent NOTIFY isSilentChanged)
	Q_PROPERTY(TLInt muteUntil READ muteUntil WRITE setMuteUntil NOTIFY muteUntilChanged)
	Q_PROPERTY(TLString sound READ sound WRITE setSound NOTIFY soundChanged)

	Q_ENUMS(Constructors)

	public:
		enum Constructors {
			CtorInputPeerNotifySettings = 0x38935eb2,
		};

	public:
		explicit InputPeerNotifySettings(QObject* parent = 0);
		virtual void read(MTProtoStream* mtstream);
		virtual void write(MTProtoStream* mtstream);
	protected:
		virtual void compileFlags();
	public:
		TLInt flags() const;
		void setFlags(TLInt flags);
		TLTrue isShowPreviews() const;
		void setIsShowPreviews(TLTrue is_show_previews);
		TLTrue isSilent() const;
		void setIsSilent(TLTrue is_silent);
		TLInt muteUntil() const;
		void setMuteUntil(TLInt mute_until);
		TLString sound() const;
		void setSound(TLString sound);

	signals:
		void flagsChanged();
		void isShowPreviewsChanged();
		void isSilentChanged();
		void muteUntilChanged();
		void soundChanged();

	private:
		TLInt _flags;
		TLTrue _is_show_previews;
		TLTrue _is_silent;
		TLInt _mute_until;
		TLString _sound;

};

#endif // INPUTPEERNOTIFYSETTINGS_H
