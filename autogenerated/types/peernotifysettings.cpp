// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "peernotifysettings.h"


PeerNotifySettings::PeerNotifySettings(QObject* parent) : TelegramObject(parent)
{
	this->_flags = 0;
	this->_is_show_previews = false;
	this->_is_silent = false;
	this->_mute_until = 0;
}

void PeerNotifySettings::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == PeerNotifySettings::ctorPeerNotifySettingsEmpty) ||
		 (this->_constructorid == PeerNotifySettings::ctorPeerNotifySettings));
	
	if(this->_constructorid == PeerNotifySettings::ctorPeerNotifySettings)
	{
		this->_flags = mtstream->readTLInt();
		this->_is_show_previews = IS_FLAG_SET(this->_flags, 0);
		this->_is_silent = IS_FLAG_SET(this->_flags, 1);
		this->_mute_until = mtstream->readTLInt();
		this->_sound = mtstream->readTLString();
	}
}

void PeerNotifySettings::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == PeerNotifySettings::ctorPeerNotifySettingsEmpty) ||
		 (this->_constructorid == PeerNotifySettings::ctorPeerNotifySettings));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == PeerNotifySettings::ctorPeerNotifySettings)
	{
		mtstream->writeTLInt(this->_flags);
		mtstream->writeTLInt(this->_mute_until);
		mtstream->writeTLString(this->_sound);
	}
}

void PeerNotifySettings::compileFlags() 
{
	this->_flags = 0;
	
	if(this->_constructorid == PeerNotifySettings::ctorPeerNotifySettings)
	{
		if(this->_is_show_previews)
			SET_FLAG_BIT(this->_flags, 0);
		if(this->_is_silent)
			SET_FLAG_BIT(this->_flags, 1);
	}
}

TLInt PeerNotifySettings::flags() const
{
	return this->_flags;
}

void PeerNotifySettings::setFlags(TLInt flags) 
{
	if(this->_flags == flags)
		return;

	this->_flags = flags;
	emit flagsChanged();
}

TLTrue PeerNotifySettings::isShowPreviews() const
{
	return this->_is_show_previews;
}

void PeerNotifySettings::setIsShowPreviews(TLTrue is_show_previews) 
{
	if(this->_is_show_previews == is_show_previews)
		return;

	this->_is_show_previews = is_show_previews;
	emit isShowPreviewsChanged();
}

TLTrue PeerNotifySettings::isSilent() const
{
	return this->_is_silent;
}

void PeerNotifySettings::setIsSilent(TLTrue is_silent) 
{
	if(this->_is_silent == is_silent)
		return;

	this->_is_silent = is_silent;
	emit isSilentChanged();
}

TLInt PeerNotifySettings::muteUntil() const
{
	return this->_mute_until;
}

void PeerNotifySettings::setMuteUntil(TLInt mute_until) 
{
	if(this->_mute_until == mute_until)
		return;

	this->_mute_until = mute_until;
	emit muteUntilChanged();
}

TLString PeerNotifySettings::sound() const
{
	return this->_sound;
}

void PeerNotifySettings::setSound(TLString sound) 
{
	if(this->_sound == sound)
		return;

	this->_sound = sound;
	emit soundChanged();
}

