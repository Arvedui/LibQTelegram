// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "messagerange.h"


MessageRange::MessageRange(QObject* parent) : TelegramObject(parent)
{
	this->_min_id = 0;
	this->_max_id = 0;
	this->_constructorid = MessageRange::ctorMessageRange;
}

void MessageRange::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == MessageRange::ctorMessageRange));
	
	if(this->_constructorid == MessageRange::ctorMessageRange)
	{
		this->_min_id = mtstream->readTLInt();
		this->_max_id = mtstream->readTLInt();
	}
}

void MessageRange::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == MessageRange::ctorMessageRange));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == MessageRange::ctorMessageRange)
	{
		mtstream->writeTLInt(this->_min_id);
		mtstream->writeTLInt(this->_max_id);
	}
}

void MessageRange::compileFlags() 
{
	
}

TLInt MessageRange::minId() const
{
	return this->_min_id;
}

void MessageRange::setMinId(TLInt min_id) 
{
	if(this->_min_id == min_id)
		return;

	this->_min_id = min_id;
	emit minIdChanged();
}

TLInt MessageRange::maxId() const
{
	return this->_max_id;
}

void MessageRange::setMaxId(TLInt max_id) 
{
	if(this->_max_id == max_id)
		return;

	this->_max_id = max_id;
	emit maxIdChanged();
}

