// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "contactslink.h"


ContactsLink::ContactsLink(QObject* parent) : TelegramObject(parent)
{
	this->_my_link = NULL;
	this->_foreign_link = NULL;
	this->_user = NULL;
	this->_constructorid = ContactsLink::ctorContactsLink;
}

void ContactsLink::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == ContactsLink::ctorContactsLink));
	
	if(this->_constructorid == ContactsLink::ctorContactsLink)
	{
		RESET_TLTYPE(ContactLink, this->_my_link);
		this->_my_link->read(mtstream);
		RESET_TLTYPE(ContactLink, this->_foreign_link);
		this->_foreign_link->read(mtstream);
		RESET_TLTYPE(User, this->_user);
		this->_user->read(mtstream);
	}
}

void ContactsLink::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == ContactsLink::ctorContactsLink));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == ContactsLink::ctorContactsLink)
	{
		Q_ASSERT(this->_my_link != NULL);
		this->_my_link->write(mtstream);
		Q_ASSERT(this->_foreign_link != NULL);
		this->_foreign_link->write(mtstream);
		Q_ASSERT(this->_user != NULL);
		this->_user->write(mtstream);
	}
}

void ContactsLink::compileFlags() 
{
	
}

ContactLink* ContactsLink::myLink() const
{
	return this->_my_link;
}

void ContactsLink::setMyLink(ContactLink* my_link) 
{
	if(this->_my_link == my_link)
		return;

	this->_my_link = my_link;
	emit myLinkChanged();
}

ContactLink* ContactsLink::foreignLink() const
{
	return this->_foreign_link;
}

void ContactsLink::setForeignLink(ContactLink* foreign_link) 
{
	if(this->_foreign_link == foreign_link)
		return;

	this->_foreign_link = foreign_link;
	emit foreignLinkChanged();
}

User* ContactsLink::user() const
{
	return this->_user;
}

void ContactsLink::setUser(User* user) 
{
	if(this->_user == user)
		return;

	this->_user = user;
	emit userChanged();
}

