#ifndef MESSAGEMEDIA_H
#define MESSAGEMEDIA_H

// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "game.h"
#include "geopoint.h"
#include "../../types/basic.h"
#include "../../types/telegramobject.h"
#include "document.h"
#include "webpage.h"
#include "photo.h"

class MessageMedia: public TelegramObject
{
	Q_OBJECT

	Q_PROPERTY(Photo* photo READ photo WRITE setPhoto NOTIFY photoChanged)
	Q_PROPERTY(TLString caption READ caption WRITE setCaption NOTIFY captionChanged)
	Q_PROPERTY(GeoPoint* geo READ geo WRITE setGeo NOTIFY geoChanged)
	Q_PROPERTY(TLString phoneNumber READ phoneNumber WRITE setPhoneNumber NOTIFY phoneNumberChanged)
	Q_PROPERTY(TLString firstName READ firstName WRITE setFirstName NOTIFY firstNameChanged)
	Q_PROPERTY(TLString lastName READ lastName WRITE setLastName NOTIFY lastNameChanged)
	Q_PROPERTY(TLInt userId READ userId WRITE setUserId NOTIFY userIdChanged)
	Q_PROPERTY(Document* document READ document WRITE setDocument NOTIFY documentChanged)
	Q_PROPERTY(WebPage* webpage READ webpage WRITE setWebpage NOTIFY webpageChanged)
	Q_PROPERTY(TLString title READ title WRITE setTitle NOTIFY titleChanged)
	Q_PROPERTY(TLString address READ address WRITE setAddress NOTIFY addressChanged)
	Q_PROPERTY(TLString provider READ provider WRITE setProvider NOTIFY providerChanged)
	Q_PROPERTY(TLString venueId READ venueId WRITE setVenueId NOTIFY venueIdChanged)
	Q_PROPERTY(Game* game READ game WRITE setGame NOTIFY gameChanged)

	Q_ENUMS(Constructors)

	public:
		enum Constructors {
			CtorMessageMediaEmpty = 0x3ded6320,
			CtorMessageMediaPhoto = 0x3d8ce53d,
			CtorMessageMediaGeo = 0x56e0d474,
			CtorMessageMediaContact = 0x5e7d2f39,
			CtorMessageMediaUnsupported = 0x9f84f49e,
			CtorMessageMediaDocument = 0xf3e02ea8,
			CtorMessageMediaWebPage = 0xa32dd600,
			CtorMessageMediaVenue = 0x7912b71f,
			CtorMessageMediaGame = 0xfdb19008,
		};

	public:
		explicit MessageMedia(QObject* parent = 0);
		virtual void read(MTProtoStream* mtstream);
		virtual void write(MTProtoStream* mtstream);
	protected:
		virtual void compileFlags();
	public:
		Photo* photo() const;
		void setPhoto(Photo* photo);
		TLString caption() const;
		void setCaption(TLString caption);
		GeoPoint* geo() const;
		void setGeo(GeoPoint* geo);
		TLString phoneNumber() const;
		void setPhoneNumber(TLString phone_number);
		TLString firstName() const;
		void setFirstName(TLString first_name);
		TLString lastName() const;
		void setLastName(TLString last_name);
		TLInt userId() const;
		void setUserId(TLInt user_id);
		Document* document() const;
		void setDocument(Document* document);
		WebPage* webpage() const;
		void setWebpage(WebPage* webpage);
		TLString title() const;
		void setTitle(TLString title);
		TLString address() const;
		void setAddress(TLString address);
		TLString provider() const;
		void setProvider(TLString provider);
		TLString venueId() const;
		void setVenueId(TLString venue_id);
		Game* game() const;
		void setGame(Game* game);

	signals:
		void photoChanged();
		void captionChanged();
		void geoChanged();
		void phoneNumberChanged();
		void firstNameChanged();
		void lastNameChanged();
		void userIdChanged();
		void documentChanged();
		void webpageChanged();
		void titleChanged();
		void addressChanged();
		void providerChanged();
		void venueIdChanged();
		void gameChanged();

	private:
		Photo* _photo;
		TLString _caption;
		GeoPoint* _geo;
		TLString _phone_number;
		TLString _first_name;
		TLString _last_name;
		TLInt _user_id;
		Document* _document;
		WebPage* _webpage;
		TLString _title;
		TLString _address;
		TLString _provider;
		TLString _venue_id;
		Game* _game;

};

#endif // MESSAGEMEDIA_H
