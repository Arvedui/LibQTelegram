#ifndef DCOPTION_H
#define DCOPTION_H

// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "../../types/telegramobject.h"
#include "../../types/basic.h"

class DcOption: public TelegramObject
{
	Q_OBJECT

	Q_PROPERTY(TLInt flags READ flags WRITE setFlags NOTIFY flagsChanged)
	Q_PROPERTY(TLTrue isIpv6 READ isIpv6 WRITE setIsIpv6 NOTIFY isIpv6Changed)
	Q_PROPERTY(TLTrue isMediaOnly READ isMediaOnly WRITE setIsMediaOnly NOTIFY isMediaOnlyChanged)
	Q_PROPERTY(TLTrue isTcpoOnly READ isTcpoOnly WRITE setIsTcpoOnly NOTIFY isTcpoOnlyChanged)
	Q_PROPERTY(TLInt id READ id WRITE setId NOTIFY idChanged)
	Q_PROPERTY(TLString ipAddress READ ipAddress WRITE setIpAddress NOTIFY ipAddressChanged)
	Q_PROPERTY(TLInt port READ port WRITE setPort NOTIFY portChanged)

	Q_ENUMS(Constructors)

	public:
		enum Constructors {
			CtorDcOption = 0x5d8c6cc,
		};

	public:
		explicit DcOption(QObject* parent = 0);
		virtual void read(MTProtoStream* mtstream);
		virtual void write(MTProtoStream* mtstream);
	protected:
		virtual void compileFlags();
	public:
		TLInt flags() const;
		void setFlags(TLInt flags);
		TLTrue isIpv6() const;
		void setIsIpv6(TLTrue is_ipv6);
		TLTrue isMediaOnly() const;
		void setIsMediaOnly(TLTrue is_media_only);
		TLTrue isTcpoOnly() const;
		void setIsTcpoOnly(TLTrue is_tcpo_only);
		TLInt id() const;
		void setId(TLInt id);
		TLString ipAddress() const;
		void setIpAddress(TLString ip_address);
		TLInt port() const;
		void setPort(TLInt port);

	signals:
		void flagsChanged();
		void isIpv6Changed();
		void isMediaOnlyChanged();
		void isTcpoOnlyChanged();
		void idChanged();
		void ipAddressChanged();
		void portChanged();

	private:
		TLInt _flags;
		TLTrue _is_ipv6;
		TLTrue _is_media_only;
		TLTrue _is_tcpo_only;
		TLInt _id;
		TLString _ip_address;
		TLInt _port;

};

#endif // DCOPTION_H
