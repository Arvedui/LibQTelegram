// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "inputstickerset.h"


InputStickerSet::InputStickerSet(QObject* parent) : TelegramObject(parent)
{
	this->_id = 0;
	this->_access_hash = 0;
}

void InputStickerSet::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == InputStickerSet::ctorInputStickerSetEmpty) ||
		 (this->_constructorid == InputStickerSet::ctorInputStickerSetID) ||
		 (this->_constructorid == InputStickerSet::ctorInputStickerSetShortName));
	
	if(this->_constructorid == InputStickerSet::ctorInputStickerSetID)
	{
		this->_id = mtstream->readTLLong();
		this->_access_hash = mtstream->readTLLong();
	}
	else if(this->_constructorid == InputStickerSet::ctorInputStickerSetShortName)
		this->_short_name = mtstream->readTLString();
}

void InputStickerSet::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == InputStickerSet::ctorInputStickerSetEmpty) ||
		 (this->_constructorid == InputStickerSet::ctorInputStickerSetID) ||
		 (this->_constructorid == InputStickerSet::ctorInputStickerSetShortName));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == InputStickerSet::ctorInputStickerSetID)
	{
		mtstream->writeTLLong(this->_id);
		mtstream->writeTLLong(this->_access_hash);
	}
	else if(this->_constructorid == InputStickerSet::ctorInputStickerSetShortName)
		mtstream->writeTLString(this->_short_name);
}

void InputStickerSet::compileFlags() 
{
	
}

TLLong InputStickerSet::id() const
{
	return this->_id;
}

void InputStickerSet::setId(TLLong id) 
{
	if(this->_id == id)
		return;

	this->_id = id;
	emit idChanged();
}

TLLong InputStickerSet::accessHash() const
{
	return this->_access_hash;
}

void InputStickerSet::setAccessHash(TLLong access_hash) 
{
	if(this->_access_hash == access_hash)
		return;

	this->_access_hash = access_hash;
	emit accessHashChanged();
}

TLString InputStickerSet::shortName() const
{
	return this->_short_name;
}

void InputStickerSet::setShortName(TLString short_name) 
{
	if(this->_short_name == short_name)
		return;

	this->_short_name = short_name;
	emit shortNameChanged();
}

