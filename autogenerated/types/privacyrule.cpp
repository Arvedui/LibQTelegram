// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "privacyrule.h"


PrivacyRule::PrivacyRule(QObject* parent) : TelegramObject(parent)
{
	
}

void PrivacyRule::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == PrivacyRule::ctorPrivacyValueAllowContacts) ||
		 (this->_constructorid == PrivacyRule::ctorPrivacyValueAllowAll) ||
		 (this->_constructorid == PrivacyRule::ctorPrivacyValueAllowUsers) ||
		 (this->_constructorid == PrivacyRule::ctorPrivacyValueDisallowContacts) ||
		 (this->_constructorid == PrivacyRule::ctorPrivacyValueDisallowAll) ||
		 (this->_constructorid == PrivacyRule::ctorPrivacyValueDisallowUsers));
	
	if(this->_constructorid == PrivacyRule::ctorPrivacyValueAllowUsers)
		mtstream->readTLVector<TLInt>(this->_users, false);
	else if(this->_constructorid == PrivacyRule::ctorPrivacyValueDisallowUsers)
		mtstream->readTLVector<TLInt>(this->_users, false);
}

void PrivacyRule::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == PrivacyRule::ctorPrivacyValueAllowContacts) ||
		 (this->_constructorid == PrivacyRule::ctorPrivacyValueAllowAll) ||
		 (this->_constructorid == PrivacyRule::ctorPrivacyValueAllowUsers) ||
		 (this->_constructorid == PrivacyRule::ctorPrivacyValueDisallowContacts) ||
		 (this->_constructorid == PrivacyRule::ctorPrivacyValueDisallowAll) ||
		 (this->_constructorid == PrivacyRule::ctorPrivacyValueDisallowUsers));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == PrivacyRule::ctorPrivacyValueAllowUsers)
		mtstream->writeTLVector(this->_users, false);
	else if(this->_constructorid == PrivacyRule::ctorPrivacyValueDisallowUsers)
		mtstream->writeTLVector(this->_users, false);
}

void PrivacyRule::compileFlags() 
{
	
}

const TLVector<TLInt>& PrivacyRule::users() const
{
	return this->_users;
}

void PrivacyRule::setUsers(const TLVector<TLInt>& users) 
{
	if(this->_users == users)
		return;

	this->_users = users;
	emit usersChanged();
}

