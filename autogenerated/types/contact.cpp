// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "contact.h"


Contact::Contact(QObject* parent) : TelegramObject(parent)
{
	this->_user_id = 0;
	this->_is_mutual = false;
	this->_constructorid = Contact::ctorContact;
}

void Contact::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == Contact::ctorContact));
	
	if(this->_constructorid == Contact::ctorContact)
	{
		this->_user_id = mtstream->readTLInt();
		this->_is_mutual = mtstream->readTLBool();
	}
}

void Contact::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == Contact::ctorContact));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == Contact::ctorContact)
	{
		mtstream->writeTLInt(this->_user_id);
		mtstream->writeTLBool(this->_is_mutual);
	}
}

void Contact::compileFlags() 
{
	
}

TLInt Contact::userId() const
{
	return this->_user_id;
}

void Contact::setUserId(TLInt user_id) 
{
	if(this->_user_id == user_id)
		return;

	this->_user_id = user_id;
	emit userIdChanged();
}

TLBool Contact::isMutual() const
{
	return this->_is_mutual;
}

void Contact::setIsMutual(TLBool is_mutual) 
{
	if(this->_is_mutual == is_mutual)
		return;

	this->_is_mutual = is_mutual;
	emit isMutualChanged();
}

