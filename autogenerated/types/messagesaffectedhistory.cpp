// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "messagesaffectedhistory.h"


MessagesAffectedHistory::MessagesAffectedHistory(QObject* parent) : TelegramObject(parent)
{
	this->_pts = 0;
	this->_pts_count = 0;
	this->_offset = 0;
	this->_constructorid = MessagesAffectedHistory::CtorMessagesAffectedHistory;
}

void MessagesAffectedHistory::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == MessagesAffectedHistory::CtorMessagesAffectedHistory));
	
	if(this->_constructorid == MessagesAffectedHistory::CtorMessagesAffectedHistory)
	{
		this->_pts = mtstream->readTLInt();
		this->_pts_count = mtstream->readTLInt();
		this->_offset = mtstream->readTLInt();
	}
}

void MessagesAffectedHistory::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == MessagesAffectedHistory::CtorMessagesAffectedHistory));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == MessagesAffectedHistory::CtorMessagesAffectedHistory)
	{
		mtstream->writeTLInt(this->_pts);
		mtstream->writeTLInt(this->_pts_count);
		mtstream->writeTLInt(this->_offset);
	}
}

void MessagesAffectedHistory::compileFlags() 
{
	
}

TLInt MessagesAffectedHistory::pts() const
{
	return this->_pts;
}

void MessagesAffectedHistory::setPts(TLInt pts) 
{
	if(this->_pts == pts)
		return;

	this->_pts = pts;
	emit ptsChanged();
}

TLInt MessagesAffectedHistory::ptsCount() const
{
	return this->_pts_count;
}

void MessagesAffectedHistory::setPtsCount(TLInt pts_count) 
{
	if(this->_pts_count == pts_count)
		return;

	this->_pts_count = pts_count;
	emit ptsCountChanged();
}

TLInt MessagesAffectedHistory::offset() const
{
	return this->_offset;
}

void MessagesAffectedHistory::setOffset(TLInt offset) 
{
	if(this->_offset == offset)
		return;

	this->_offset = offset;
	emit offsetChanged();
}

