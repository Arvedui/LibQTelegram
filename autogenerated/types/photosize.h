#ifndef PHOTOSIZE_H
#define PHOTOSIZE_H

// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "../../types/basic.h"
#include "filelocation.h"
#include "../../types/telegramobject.h"

class PhotoSize: public TelegramObject
{
	Q_OBJECT

	Q_PROPERTY(TLString type READ type WRITE setType NOTIFY typeChanged)
	Q_PROPERTY(FileLocation* location READ location WRITE setLocation NOTIFY locationChanged)
	Q_PROPERTY(TLInt w READ w WRITE setW NOTIFY wChanged)
	Q_PROPERTY(TLInt h READ h WRITE setH NOTIFY hChanged)
	Q_PROPERTY(TLInt size READ size WRITE setSize NOTIFY sizeChanged)
	Q_PROPERTY(TLBytes bytes READ bytes WRITE setBytes NOTIFY bytesChanged)

	public:
		enum Constructors {
			ctorPhotoSizeEmpty = 0xe17e23c,
			ctorPhotoSize = 0x77bfb61b,
			ctorPhotoCachedSize = 0xe9a734fa,
		};

	public:
		explicit PhotoSize(QObject* parent = 0);
		virtual void read(MTProtoStream* mtstream);
		virtual void write(MTProtoStream* mtstream);
	protected:
		virtual void compileFlags();
	public:
		TLString type() const;
		void setType(TLString type);
		FileLocation* location() const;
		void setLocation(FileLocation* location);
		TLInt w() const;
		void setW(TLInt w);
		TLInt h() const;
		void setH(TLInt h);
		TLInt size() const;
		void setSize(TLInt size);
		TLBytes bytes() const;
		void setBytes(TLBytes bytes);

	signals:
		void typeChanged();
		void locationChanged();
		void wChanged();
		void hChanged();
		void sizeChanged();
		void bytesChanged();

	private:
		TLString _type;
		FileLocation* _location;
		TLInt _w;
		TLInt _h;
		TLInt _size;
		TLBytes _bytes;

};

#endif // PHOTOSIZE_H
