// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "messagessavedgifs.h"


MessagesSavedGifs::MessagesSavedGifs(QObject* parent) : TelegramObject(parent)
{
	this->_hash = 0;
}

void MessagesSavedGifs::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == MessagesSavedGifs::CtorMessagesSavedGifsNotModified) ||
		 (this->_constructorid == MessagesSavedGifs::CtorMessagesSavedGifs));
	
	if(this->_constructorid == MessagesSavedGifs::CtorMessagesSavedGifs)
	{
		this->_hash = mtstream->readTLInt();
		mtstream->readTLVector<Document>(this->_gifs, false, this);
	}
}

void MessagesSavedGifs::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == MessagesSavedGifs::CtorMessagesSavedGifsNotModified) ||
		 (this->_constructorid == MessagesSavedGifs::CtorMessagesSavedGifs));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == MessagesSavedGifs::CtorMessagesSavedGifs)
	{
		mtstream->writeTLInt(this->_hash);
		mtstream->writeTLVector(this->_gifs, false);
	}
}

void MessagesSavedGifs::compileFlags() 
{
	
}

TLInt MessagesSavedGifs::hash() const
{
	return this->_hash;
}

void MessagesSavedGifs::setHash(TLInt hash) 
{
	if(this->_hash == hash)
		return;

	this->_hash = hash;
	emit hashChanged();
}

const TLVector<Document*>& MessagesSavedGifs::gifs() const
{
	return this->_gifs;
}

void MessagesSavedGifs::setGifs(const TLVector<Document*>& gifs) 
{
	if(this->_gifs == gifs)
		return;

	this->_gifs = gifs;
	emit gifsChanged();
}

