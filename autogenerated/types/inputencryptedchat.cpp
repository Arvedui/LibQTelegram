// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "inputencryptedchat.h"


InputEncryptedChat::InputEncryptedChat(QObject* parent) : TelegramObject(parent)
{
	this->_chat_id = 0;
	this->_access_hash = 0;
	this->_constructorid = InputEncryptedChat::CtorInputEncryptedChat;
}

void InputEncryptedChat::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == InputEncryptedChat::CtorInputEncryptedChat));
	
	if(this->_constructorid == InputEncryptedChat::CtorInputEncryptedChat)
	{
		this->_chat_id = mtstream->readTLInt();
		this->_access_hash = mtstream->readTLLong();
	}
}

void InputEncryptedChat::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == InputEncryptedChat::CtorInputEncryptedChat));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == InputEncryptedChat::CtorInputEncryptedChat)
	{
		mtstream->writeTLInt(this->_chat_id);
		mtstream->writeTLLong(this->_access_hash);
	}
}

void InputEncryptedChat::compileFlags() 
{
	
}

TLInt InputEncryptedChat::chatId() const
{
	return this->_chat_id;
}

void InputEncryptedChat::setChatId(TLInt chat_id) 
{
	if(this->_chat_id == chat_id)
		return;

	this->_chat_id = chat_id;
	emit chatIdChanged();
}

TLLong InputEncryptedChat::accessHash() const
{
	return this->_access_hash;
}

void InputEncryptedChat::setAccessHash(TLLong access_hash) 
{
	if(this->_access_hash == access_hash)
		return;

	this->_access_hash = access_hash;
	emit accessHashChanged();
}

