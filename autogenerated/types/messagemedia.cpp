// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "messagemedia.h"


MessageMedia::MessageMedia(QObject* parent) : TelegramObject(parent)
{
	this->_photo = NULL;
	this->_geo = NULL;
	this->_user_id = 0;
	this->_document = NULL;
	this->_webpage = NULL;
	this->_game = NULL;
}

void MessageMedia::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == MessageMedia::ctorMessageMediaEmpty) ||
		 (this->_constructorid == MessageMedia::ctorMessageMediaPhoto) ||
		 (this->_constructorid == MessageMedia::ctorMessageMediaGeo) ||
		 (this->_constructorid == MessageMedia::ctorMessageMediaContact) ||
		 (this->_constructorid == MessageMedia::ctorMessageMediaUnsupported) ||
		 (this->_constructorid == MessageMedia::ctorMessageMediaDocument) ||
		 (this->_constructorid == MessageMedia::ctorMessageMediaWebPage) ||
		 (this->_constructorid == MessageMedia::ctorMessageMediaVenue) ||
		 (this->_constructorid == MessageMedia::ctorMessageMediaGame));
	
	if(this->_constructorid == MessageMedia::ctorMessageMediaPhoto)
	{
		RESET_TLTYPE(Photo, this->_photo);
		this->_photo->read(mtstream);
		this->_caption = mtstream->readTLString();
	}
	else if(this->_constructorid == MessageMedia::ctorMessageMediaGeo)
	{
		RESET_TLTYPE(GeoPoint, this->_geo);
		this->_geo->read(mtstream);
	}
	else if(this->_constructorid == MessageMedia::ctorMessageMediaContact)
	{
		this->_phone_number = mtstream->readTLString();
		this->_first_name = mtstream->readTLString();
		this->_last_name = mtstream->readTLString();
		this->_user_id = mtstream->readTLInt();
	}
	else if(this->_constructorid == MessageMedia::ctorMessageMediaDocument)
	{
		RESET_TLTYPE(Document, this->_document);
		this->_document->read(mtstream);
		this->_caption = mtstream->readTLString();
	}
	else if(this->_constructorid == MessageMedia::ctorMessageMediaWebPage)
	{
		RESET_TLTYPE(WebPage, this->_webpage);
		this->_webpage->read(mtstream);
	}
	else if(this->_constructorid == MessageMedia::ctorMessageMediaVenue)
	{
		RESET_TLTYPE(GeoPoint, this->_geo);
		this->_geo->read(mtstream);
		this->_title = mtstream->readTLString();
		this->_address = mtstream->readTLString();
		this->_provider = mtstream->readTLString();
		this->_venue_id = mtstream->readTLString();
	}
	else if(this->_constructorid == MessageMedia::ctorMessageMediaGame)
	{
		RESET_TLTYPE(Game, this->_game);
		this->_game->read(mtstream);
	}
}

void MessageMedia::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == MessageMedia::ctorMessageMediaEmpty) ||
		 (this->_constructorid == MessageMedia::ctorMessageMediaPhoto) ||
		 (this->_constructorid == MessageMedia::ctorMessageMediaGeo) ||
		 (this->_constructorid == MessageMedia::ctorMessageMediaContact) ||
		 (this->_constructorid == MessageMedia::ctorMessageMediaUnsupported) ||
		 (this->_constructorid == MessageMedia::ctorMessageMediaDocument) ||
		 (this->_constructorid == MessageMedia::ctorMessageMediaWebPage) ||
		 (this->_constructorid == MessageMedia::ctorMessageMediaVenue) ||
		 (this->_constructorid == MessageMedia::ctorMessageMediaGame));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == MessageMedia::ctorMessageMediaPhoto)
	{
		Q_ASSERT(this->_photo != NULL);
		this->_photo->write(mtstream);
		mtstream->writeTLString(this->_caption);
	}
	else if(this->_constructorid == MessageMedia::ctorMessageMediaGeo)
	{
		Q_ASSERT(this->_geo != NULL);
		this->_geo->write(mtstream);
	}
	else if(this->_constructorid == MessageMedia::ctorMessageMediaContact)
	{
		mtstream->writeTLString(this->_phone_number);
		mtstream->writeTLString(this->_first_name);
		mtstream->writeTLString(this->_last_name);
		mtstream->writeTLInt(this->_user_id);
	}
	else if(this->_constructorid == MessageMedia::ctorMessageMediaDocument)
	{
		Q_ASSERT(this->_document != NULL);
		this->_document->write(mtstream);
		mtstream->writeTLString(this->_caption);
	}
	else if(this->_constructorid == MessageMedia::ctorMessageMediaWebPage)
	{
		Q_ASSERT(this->_webpage != NULL);
		this->_webpage->write(mtstream);
	}
	else if(this->_constructorid == MessageMedia::ctorMessageMediaVenue)
	{
		Q_ASSERT(this->_geo != NULL);
		this->_geo->write(mtstream);
		mtstream->writeTLString(this->_title);
		mtstream->writeTLString(this->_address);
		mtstream->writeTLString(this->_provider);
		mtstream->writeTLString(this->_venue_id);
	}
	else if(this->_constructorid == MessageMedia::ctorMessageMediaGame)
	{
		Q_ASSERT(this->_game != NULL);
		this->_game->write(mtstream);
	}
}

void MessageMedia::compileFlags() 
{
	
}

Photo* MessageMedia::photo() const
{
	return this->_photo;
}

void MessageMedia::setPhoto(Photo* photo) 
{
	if(this->_photo == photo)
		return;

	this->_photo = photo;
	emit photoChanged();
}

TLString MessageMedia::caption() const
{
	return this->_caption;
}

void MessageMedia::setCaption(TLString caption) 
{
	if(this->_caption == caption)
		return;

	this->_caption = caption;
	emit captionChanged();
}

GeoPoint* MessageMedia::geo() const
{
	return this->_geo;
}

void MessageMedia::setGeo(GeoPoint* geo) 
{
	if(this->_geo == geo)
		return;

	this->_geo = geo;
	emit geoChanged();
}

TLString MessageMedia::phoneNumber() const
{
	return this->_phone_number;
}

void MessageMedia::setPhoneNumber(TLString phone_number) 
{
	if(this->_phone_number == phone_number)
		return;

	this->_phone_number = phone_number;
	emit phoneNumberChanged();
}

TLString MessageMedia::firstName() const
{
	return this->_first_name;
}

void MessageMedia::setFirstName(TLString first_name) 
{
	if(this->_first_name == first_name)
		return;

	this->_first_name = first_name;
	emit firstNameChanged();
}

TLString MessageMedia::lastName() const
{
	return this->_last_name;
}

void MessageMedia::setLastName(TLString last_name) 
{
	if(this->_last_name == last_name)
		return;

	this->_last_name = last_name;
	emit lastNameChanged();
}

TLInt MessageMedia::userId() const
{
	return this->_user_id;
}

void MessageMedia::setUserId(TLInt user_id) 
{
	if(this->_user_id == user_id)
		return;

	this->_user_id = user_id;
	emit userIdChanged();
}

Document* MessageMedia::document() const
{
	return this->_document;
}

void MessageMedia::setDocument(Document* document) 
{
	if(this->_document == document)
		return;

	this->_document = document;
	emit documentChanged();
}

WebPage* MessageMedia::webpage() const
{
	return this->_webpage;
}

void MessageMedia::setWebpage(WebPage* webpage) 
{
	if(this->_webpage == webpage)
		return;

	this->_webpage = webpage;
	emit webpageChanged();
}

TLString MessageMedia::title() const
{
	return this->_title;
}

void MessageMedia::setTitle(TLString title) 
{
	if(this->_title == title)
		return;

	this->_title = title;
	emit titleChanged();
}

TLString MessageMedia::address() const
{
	return this->_address;
}

void MessageMedia::setAddress(TLString address) 
{
	if(this->_address == address)
		return;

	this->_address = address;
	emit addressChanged();
}

TLString MessageMedia::provider() const
{
	return this->_provider;
}

void MessageMedia::setProvider(TLString provider) 
{
	if(this->_provider == provider)
		return;

	this->_provider = provider;
	emit providerChanged();
}

TLString MessageMedia::venueId() const
{
	return this->_venue_id;
}

void MessageMedia::setVenueId(TLString venue_id) 
{
	if(this->_venue_id == venue_id)
		return;

	this->_venue_id = venue_id;
	emit venueIdChanged();
}

Game* MessageMedia::game() const
{
	return this->_game;
}

void MessageMedia::setGame(Game* game) 
{
	if(this->_game == game)
		return;

	this->_game = game;
	emit gameChanged();
}

