// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "inputphoto.h"


InputPhoto::InputPhoto(QObject* parent) : TelegramObject(parent)
{
	this->_id = 0;
	this->_access_hash = 0;
}

void InputPhoto::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == InputPhoto::CtorInputPhotoEmpty) ||
		 (this->_constructorid == InputPhoto::CtorInputPhoto));
	
	if(this->_constructorid == InputPhoto::CtorInputPhoto)
	{
		this->_id = mtstream->readTLLong();
		this->_access_hash = mtstream->readTLLong();
	}
}

void InputPhoto::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == InputPhoto::CtorInputPhotoEmpty) ||
		 (this->_constructorid == InputPhoto::CtorInputPhoto));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == InputPhoto::CtorInputPhoto)
	{
		mtstream->writeTLLong(this->_id);
		mtstream->writeTLLong(this->_access_hash);
	}
}

void InputPhoto::compileFlags() 
{
	
}

TLLong InputPhoto::id() const
{
	return this->_id;
}

void InputPhoto::setId(TLLong id) 
{
	if(this->_id == id)
		return;

	this->_id = id;
	emit idChanged();
}

TLLong InputPhoto::accessHash() const
{
	return this->_access_hash;
}

void InputPhoto::setAccessHash(TLLong access_hash) 
{
	if(this->_access_hash == access_hash)
		return;

	this->_access_hash = access_hash;
	emit accessHashChanged();
}

