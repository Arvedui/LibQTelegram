#ifndef CONTACTSTOPPEERS_H
#define CONTACTSTOPPEERS_H

// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "chat.h"
#include "toppeercategorypeers.h"
#include "../../types/telegramobject.h"
#include "user.h"
#include "../../types/basic.h"

class ContactsTopPeers: public TelegramObject
{
	Q_OBJECT

	Q_PROPERTY(TLVector<TopPeerCategoryPeers*> categories READ categories WRITE setCategories NOTIFY categoriesChanged)
	Q_PROPERTY(TLVector<Chat*> chats READ chats WRITE setChats NOTIFY chatsChanged)
	Q_PROPERTY(TLVector<User*> users READ users WRITE setUsers NOTIFY usersChanged)

	Q_ENUMS(Constructors)

	public:
		enum Constructors {
			CtorContactsTopPeersNotModified = 0xde266ef5,
			CtorContactsTopPeers = 0x70b772a8,
		};

	public:
		explicit ContactsTopPeers(QObject* parent = 0);
		virtual void read(MTProtoStream* mtstream);
		virtual void write(MTProtoStream* mtstream);
	protected:
		virtual void compileFlags();
	public:
		const TLVector<TopPeerCategoryPeers*>& categories() const;
		void setCategories(const TLVector<TopPeerCategoryPeers*>& categories);
		const TLVector<Chat*>& chats() const;
		void setChats(const TLVector<Chat*>& chats);
		const TLVector<User*>& users() const;
		void setUsers(const TLVector<User*>& users);

	signals:
		void categoriesChanged();
		void chatsChanged();
		void usersChanged();

	private:
		TLVector<TopPeerCategoryPeers*> _categories;
		TLVector<Chat*> _chats;
		TLVector<User*> _users;

};

#endif // CONTACTSTOPPEERS_H
