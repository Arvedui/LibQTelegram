#ifndef DOCUMENTATTRIBUTE_H
#define DOCUMENTATTRIBUTE_H

// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "maskcoords.h"
#include "../../types/telegramobject.h"
#include "../../types/basic.h"
#include "inputstickerset.h"

class DocumentAttribute: public TelegramObject
{
	Q_OBJECT

	Q_PROPERTY(TLInt w READ w WRITE setW NOTIFY wChanged)
	Q_PROPERTY(TLInt h READ h WRITE setH NOTIFY hChanged)
	Q_PROPERTY(TLInt flags READ flags WRITE setFlags NOTIFY flagsChanged)
	Q_PROPERTY(TLTrue isMask READ isMask WRITE setIsMask NOTIFY isMaskChanged)
	Q_PROPERTY(TLString alt READ alt WRITE setAlt NOTIFY altChanged)
	Q_PROPERTY(InputStickerSet* stickerset READ stickerset WRITE setStickerset NOTIFY stickersetChanged)
	Q_PROPERTY(MaskCoords* maskCoords READ maskCoords WRITE setMaskCoords NOTIFY maskCoordsChanged)
	Q_PROPERTY(TLInt duration READ duration WRITE setDuration NOTIFY durationChanged)
	Q_PROPERTY(TLTrue isVoice READ isVoice WRITE setIsVoice NOTIFY isVoiceChanged)
	Q_PROPERTY(TLString title READ title WRITE setTitle NOTIFY titleChanged)
	Q_PROPERTY(TLString performer READ performer WRITE setPerformer NOTIFY performerChanged)
	Q_PROPERTY(TLBytes waveform READ waveform WRITE setWaveform NOTIFY waveformChanged)
	Q_PROPERTY(TLString fileName READ fileName WRITE setFileName NOTIFY fileNameChanged)

	Q_ENUMS(Constructors)

	public:
		enum Constructors {
			ctorDocumentAttributeImageSize = 0x6c37c15c,
			ctorDocumentAttributeAnimated = 0x11b58939,
			ctorDocumentAttributeSticker = 0x6319d612,
			ctorDocumentAttributeVideo = 0x5910cccb,
			ctorDocumentAttributeAudio = 0x9852f9c6,
			ctorDocumentAttributeFilename = 0x15590068,
			ctorDocumentAttributeHasStickers = 0x9801d2f7,
		};

	public:
		explicit DocumentAttribute(QObject* parent = 0);
		virtual void read(MTProtoStream* mtstream);
		virtual void write(MTProtoStream* mtstream);
	protected:
		virtual void compileFlags();
	public:
		TLInt w() const;
		void setW(TLInt w);
		TLInt h() const;
		void setH(TLInt h);
		TLInt flags() const;
		void setFlags(TLInt flags);
		TLTrue isMask() const;
		void setIsMask(TLTrue is_mask);
		TLString alt() const;
		void setAlt(TLString alt);
		InputStickerSet* stickerset() const;
		void setStickerset(InputStickerSet* stickerset);
		MaskCoords* maskCoords() const;
		void setMaskCoords(MaskCoords* mask_coords);
		TLInt duration() const;
		void setDuration(TLInt duration);
		TLTrue isVoice() const;
		void setIsVoice(TLTrue is_voice);
		TLString title() const;
		void setTitle(TLString title);
		TLString performer() const;
		void setPerformer(TLString performer);
		TLBytes waveform() const;
		void setWaveform(TLBytes waveform);
		TLString fileName() const;
		void setFileName(TLString file_name);

	signals:
		void wChanged();
		void hChanged();
		void flagsChanged();
		void isMaskChanged();
		void altChanged();
		void stickersetChanged();
		void maskCoordsChanged();
		void durationChanged();
		void isVoiceChanged();
		void titleChanged();
		void performerChanged();
		void waveformChanged();
		void fileNameChanged();

	private:
		TLInt _w;
		TLInt _h;
		TLInt _flags;
		TLTrue _is_mask;
		TLString _alt;
		InputStickerSet* _stickerset;
		MaskCoords* _mask_coords;
		TLInt _duration;
		TLTrue _is_voice;
		TLString _title;
		TLString _performer;
		TLBytes _waveform;
		TLString _file_name;

};

#endif // DOCUMENTATTRIBUTE_H
