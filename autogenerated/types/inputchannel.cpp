// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "inputchannel.h"


InputChannel::InputChannel(QObject* parent) : TelegramObject(parent)
{
	this->_channel_id = 0;
	this->_access_hash = 0;
}

void InputChannel::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == InputChannel::CtorInputChannelEmpty) ||
		 (this->_constructorid == InputChannel::CtorInputChannel));
	
	if(this->_constructorid == InputChannel::CtorInputChannel)
	{
		this->_channel_id = mtstream->readTLInt();
		this->_access_hash = mtstream->readTLLong();
	}
}

void InputChannel::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == InputChannel::CtorInputChannelEmpty) ||
		 (this->_constructorid == InputChannel::CtorInputChannel));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == InputChannel::CtorInputChannel)
	{
		mtstream->writeTLInt(this->_channel_id);
		mtstream->writeTLLong(this->_access_hash);
	}
}

void InputChannel::compileFlags() 
{
	
}

TLInt InputChannel::channelId() const
{
	return this->_channel_id;
}

void InputChannel::setChannelId(TLInt channel_id) 
{
	if(this->_channel_id == channel_id)
		return;

	this->_channel_id = channel_id;
	emit channelIdChanged();
}

TLLong InputChannel::accessHash() const
{
	return this->_access_hash;
}

void InputChannel::setAccessHash(TLLong access_hash) 
{
	if(this->_access_hash == access_hash)
		return;

	this->_access_hash = access_hash;
	emit accessHashChanged();
}

