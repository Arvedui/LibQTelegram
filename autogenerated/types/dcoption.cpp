// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "dcoption.h"


DcOption::DcOption(QObject* parent) : TelegramObject(parent)
{
	this->_flags = 0;
	this->_is_ipv6 = false;
	this->_is_media_only = false;
	this->_is_tcpo_only = false;
	this->_id = 0;
	this->_port = 0;
	this->_constructorid = DcOption::ctorDcOption;
}

void DcOption::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == DcOption::ctorDcOption));
	
	if(this->_constructorid == DcOption::ctorDcOption)
	{
		this->_flags = mtstream->readTLInt();
		this->_is_ipv6 = IS_FLAG_SET(this->_flags, 0);
		this->_is_media_only = IS_FLAG_SET(this->_flags, 1);
		this->_is_tcpo_only = IS_FLAG_SET(this->_flags, 2);
		this->_id = mtstream->readTLInt();
		this->_ip_address = mtstream->readTLString();
		this->_port = mtstream->readTLInt();
	}
}

void DcOption::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == DcOption::ctorDcOption));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == DcOption::ctorDcOption)
	{
		mtstream->writeTLInt(this->_flags);
		mtstream->writeTLInt(this->_id);
		mtstream->writeTLString(this->_ip_address);
		mtstream->writeTLInt(this->_port);
	}
}

void DcOption::compileFlags() 
{
	this->_flags = 0;
	
	if(this->_constructorid == DcOption::ctorDcOption)
	{
		if(this->_is_ipv6)
			SET_FLAG_BIT(this->_flags, 0);
		if(this->_is_media_only)
			SET_FLAG_BIT(this->_flags, 1);
		if(this->_is_tcpo_only)
			SET_FLAG_BIT(this->_flags, 2);
	}
}

TLInt DcOption::flags() const
{
	return this->_flags;
}

void DcOption::setFlags(TLInt flags) 
{
	if(this->_flags == flags)
		return;

	this->_flags = flags;
	emit flagsChanged();
}

TLTrue DcOption::isIpv6() const
{
	return this->_is_ipv6;
}

void DcOption::setIsIpv6(TLTrue is_ipv6) 
{
	if(this->_is_ipv6 == is_ipv6)
		return;

	this->_is_ipv6 = is_ipv6;
	emit isIpv6Changed();
}

TLTrue DcOption::isMediaOnly() const
{
	return this->_is_media_only;
}

void DcOption::setIsMediaOnly(TLTrue is_media_only) 
{
	if(this->_is_media_only == is_media_only)
		return;

	this->_is_media_only = is_media_only;
	emit isMediaOnlyChanged();
}

TLTrue DcOption::isTcpoOnly() const
{
	return this->_is_tcpo_only;
}

void DcOption::setIsTcpoOnly(TLTrue is_tcpo_only) 
{
	if(this->_is_tcpo_only == is_tcpo_only)
		return;

	this->_is_tcpo_only = is_tcpo_only;
	emit isTcpoOnlyChanged();
}

TLInt DcOption::id() const
{
	return this->_id;
}

void DcOption::setId(TLInt id) 
{
	if(this->_id == id)
		return;

	this->_id = id;
	emit idChanged();
}

TLString DcOption::ipAddress() const
{
	return this->_ip_address;
}

void DcOption::setIpAddress(TLString ip_address) 
{
	if(this->_ip_address == ip_address)
		return;

	this->_ip_address = ip_address;
	emit ipAddressChanged();
}

TLInt DcOption::port() const
{
	return this->_port;
}

void DcOption::setPort(TLInt port) 
{
	if(this->_port == port)
		return;

	this->_port = port;
	emit portChanged();
}

