#ifndef MESSAGEACTION_H
#define MESSAGEACTION_H

// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "../../types/basic.h"
#include "../../types/telegramobject.h"
#include "photo.h"

class MessageAction: public TelegramObject
{
	Q_OBJECT

	Q_PROPERTY(TLString title READ title WRITE setTitle NOTIFY titleChanged)
	Q_PROPERTY(TLVector<TLInt> users READ users WRITE setUsers NOTIFY usersChanged)
	Q_PROPERTY(Photo* photo READ photo WRITE setPhoto NOTIFY photoChanged)
	Q_PROPERTY(TLInt userId READ userId WRITE setUserId NOTIFY userIdChanged)
	Q_PROPERTY(TLInt inviterId READ inviterId WRITE setInviterId NOTIFY inviterIdChanged)
	Q_PROPERTY(TLInt channelId READ channelId WRITE setChannelId NOTIFY channelIdChanged)
	Q_PROPERTY(TLInt chatId READ chatId WRITE setChatId NOTIFY chatIdChanged)
	Q_PROPERTY(TLLong gameId READ gameId WRITE setGameId NOTIFY gameIdChanged)
	Q_PROPERTY(TLInt score READ score WRITE setScore NOTIFY scoreChanged)

	Q_ENUMS(Constructors)

	public:
		enum Constructors {
			CtorMessageActionEmpty = 0xb6aef7b0,
			CtorMessageActionChatCreate = 0xa6638b9a,
			CtorMessageActionChatEditTitle = 0xb5a1ce5a,
			CtorMessageActionChatEditPhoto = 0x7fcb13a8,
			CtorMessageActionChatDeletePhoto = 0x95e3fbef,
			CtorMessageActionChatAddUser = 0x488a7337,
			CtorMessageActionChatDeleteUser = 0xb2ae9b0c,
			CtorMessageActionChatJoinedByLink = 0xf89cf5e8,
			CtorMessageActionChannelCreate = 0x95d2ac92,
			CtorMessageActionChatMigrateTo = 0x51bdb021,
			CtorMessageActionChannelMigrateFrom = 0xb055eaee,
			CtorMessageActionPinMessage = 0x94bd38ed,
			CtorMessageActionHistoryClear = 0x9fbab604,
			CtorMessageActionGameScore = 0x92a72876,
		};

	public:
		explicit MessageAction(QObject* parent = 0);
		virtual void read(MTProtoStream* mtstream);
		virtual void write(MTProtoStream* mtstream);
	protected:
		virtual void compileFlags();
	public:
		TLString title() const;
		void setTitle(TLString title);
		const TLVector<TLInt>& users() const;
		void setUsers(const TLVector<TLInt>& users);
		Photo* photo() const;
		void setPhoto(Photo* photo);
		TLInt userId() const;
		void setUserId(TLInt user_id);
		TLInt inviterId() const;
		void setInviterId(TLInt inviter_id);
		TLInt channelId() const;
		void setChannelId(TLInt channel_id);
		TLInt chatId() const;
		void setChatId(TLInt chat_id);
		TLLong gameId() const;
		void setGameId(TLLong game_id);
		TLInt score() const;
		void setScore(TLInt score);

	signals:
		void titleChanged();
		void usersChanged();
		void photoChanged();
		void userIdChanged();
		void inviterIdChanged();
		void channelIdChanged();
		void chatIdChanged();
		void gameIdChanged();
		void scoreChanged();

	private:
		TLString _title;
		TLVector<TLInt> _users;
		Photo* _photo;
		TLInt _user_id;
		TLInt _inviter_id;
		TLInt _channel_id;
		TLInt _chat_id;
		TLLong _game_id;
		TLInt _score;

};

#endif // MESSAGEACTION_H
