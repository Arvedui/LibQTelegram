// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "inputpeer.h"


InputPeer::InputPeer(QObject* parent) : TelegramObject(parent)
{
	this->_chat_id = 0;
	this->_user_id = 0;
	this->_access_hash = 0;
	this->_channel_id = 0;
}

void InputPeer::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == InputPeer::CtorInputPeerEmpty) ||
		 (this->_constructorid == InputPeer::CtorInputPeerSelf) ||
		 (this->_constructorid == InputPeer::CtorInputPeerChat) ||
		 (this->_constructorid == InputPeer::CtorInputPeerUser) ||
		 (this->_constructorid == InputPeer::CtorInputPeerChannel));
	
	if(this->_constructorid == InputPeer::CtorInputPeerChat)
		this->_chat_id = mtstream->readTLInt();
	else if(this->_constructorid == InputPeer::CtorInputPeerUser)
	{
		this->_user_id = mtstream->readTLInt();
		this->_access_hash = mtstream->readTLLong();
	}
	else if(this->_constructorid == InputPeer::CtorInputPeerChannel)
	{
		this->_channel_id = mtstream->readTLInt();
		this->_access_hash = mtstream->readTLLong();
	}
}

void InputPeer::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == InputPeer::CtorInputPeerEmpty) ||
		 (this->_constructorid == InputPeer::CtorInputPeerSelf) ||
		 (this->_constructorid == InputPeer::CtorInputPeerChat) ||
		 (this->_constructorid == InputPeer::CtorInputPeerUser) ||
		 (this->_constructorid == InputPeer::CtorInputPeerChannel));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == InputPeer::CtorInputPeerChat)
		mtstream->writeTLInt(this->_chat_id);
	else if(this->_constructorid == InputPeer::CtorInputPeerUser)
	{
		mtstream->writeTLInt(this->_user_id);
		mtstream->writeTLLong(this->_access_hash);
	}
	else if(this->_constructorid == InputPeer::CtorInputPeerChannel)
	{
		mtstream->writeTLInt(this->_channel_id);
		mtstream->writeTLLong(this->_access_hash);
	}
}

void InputPeer::compileFlags() 
{
	
}

TLInt InputPeer::chatId() const
{
	return this->_chat_id;
}

void InputPeer::setChatId(TLInt chat_id) 
{
	if(this->_chat_id == chat_id)
		return;

	this->_chat_id = chat_id;
	emit chatIdChanged();
}

TLInt InputPeer::userId() const
{
	return this->_user_id;
}

void InputPeer::setUserId(TLInt user_id) 
{
	if(this->_user_id == user_id)
		return;

	this->_user_id = user_id;
	emit userIdChanged();
}

TLLong InputPeer::accessHash() const
{
	return this->_access_hash;
}

void InputPeer::setAccessHash(TLLong access_hash) 
{
	if(this->_access_hash == access_hash)
		return;

	this->_access_hash = access_hash;
	emit accessHashChanged();
}

TLInt InputPeer::channelId() const
{
	return this->_channel_id;
}

void InputPeer::setChannelId(TLInt channel_id) 
{
	if(this->_channel_id == channel_id)
		return;

	this->_channel_id = channel_id;
	emit channelIdChanged();
}

