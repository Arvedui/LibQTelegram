#ifndef ENCRYPTEDFILE_H
#define ENCRYPTEDFILE_H

// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "../../types/basic.h"
#include "../../types/telegramobject.h"

class EncryptedFile: public TelegramObject
{
	Q_OBJECT

	Q_PROPERTY(TLLong id READ id WRITE setId NOTIFY idChanged)
	Q_PROPERTY(TLLong accessHash READ accessHash WRITE setAccessHash NOTIFY accessHashChanged)
	Q_PROPERTY(TLInt size READ size WRITE setSize NOTIFY sizeChanged)
	Q_PROPERTY(TLInt dcId READ dcId WRITE setDcId NOTIFY dcIdChanged)
	Q_PROPERTY(TLInt keyFingerprint READ keyFingerprint WRITE setKeyFingerprint NOTIFY keyFingerprintChanged)

	public:
		enum Constructors {
			ctorEncryptedFileEmpty = 0xc21f497e,
			ctorEncryptedFile = 0x4a70994c,
		};

	public:
		explicit EncryptedFile(QObject* parent = 0);
		virtual void read(MTProtoStream* mtstream);
		virtual void write(MTProtoStream* mtstream);
	protected:
		virtual void compileFlags();
	public:
		TLLong id() const;
		void setId(TLLong id);
		TLLong accessHash() const;
		void setAccessHash(TLLong access_hash);
		TLInt size() const;
		void setSize(TLInt size);
		TLInt dcId() const;
		void setDcId(TLInt dc_id);
		TLInt keyFingerprint() const;
		void setKeyFingerprint(TLInt key_fingerprint);

	signals:
		void idChanged();
		void accessHashChanged();
		void sizeChanged();
		void dcIdChanged();
		void keyFingerprintChanged();

	private:
		TLLong _id;
		TLLong _access_hash;
		TLInt _size;
		TLInt _dc_id;
		TLInt _key_fingerprint;

};

#endif // ENCRYPTEDFILE_H
