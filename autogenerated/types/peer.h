#ifndef PEER_H
#define PEER_H

// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "../../types/basic.h"
#include "../../types/telegramobject.h"

class Peer: public TelegramObject
{
	Q_OBJECT

	Q_PROPERTY(TLInt userId READ userId WRITE setUserId NOTIFY userIdChanged)
	Q_PROPERTY(TLInt chatId READ chatId WRITE setChatId NOTIFY chatIdChanged)
	Q_PROPERTY(TLInt channelId READ channelId WRITE setChannelId NOTIFY channelIdChanged)

	public:
		enum Constructors {
			ctorPeerUser = 0x9db1bc6d,
			ctorPeerChat = 0xbad0e5bb,
			ctorPeerChannel = 0xbddde532,
		};

	public:
		explicit Peer(QObject* parent = 0);
		virtual void read(MTProtoStream* mtstream);
		virtual void write(MTProtoStream* mtstream);
	protected:
		virtual void compileFlags();
	public:
		TLInt userId() const;
		void setUserId(TLInt user_id);
		TLInt chatId() const;
		void setChatId(TLInt chat_id);
		TLInt channelId() const;
		void setChannelId(TLInt channel_id);

	signals:
		void userIdChanged();
		void chatIdChanged();
		void channelIdChanged();

	private:
		TLInt _user_id;
		TLInt _chat_id;
		TLInt _channel_id;

};

#endif // PEER_H
