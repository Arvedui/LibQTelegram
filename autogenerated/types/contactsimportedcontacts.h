#ifndef CONTACTSIMPORTEDCONTACTS_H
#define CONTACTSIMPORTEDCONTACTS_H

// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "../../types/basic.h"
#include "../../types/telegramobject.h"
#include "importedcontact.h"
#include "user.h"

class ContactsImportedContacts: public TelegramObject
{
	Q_OBJECT

	Q_PROPERTY(TLVector<ImportedContact*> imported READ imported WRITE setImported NOTIFY importedChanged)
	Q_PROPERTY(TLVector<TLLong> retryContacts READ retryContacts WRITE setRetryContacts NOTIFY retryContactsChanged)
	Q_PROPERTY(TLVector<User*> users READ users WRITE setUsers NOTIFY usersChanged)

	Q_ENUMS(Constructors)

	public:
		enum Constructors {
			CtorContactsImportedContacts = 0xad524315,
		};

	public:
		explicit ContactsImportedContacts(QObject* parent = 0);
		virtual void read(MTProtoStream* mtstream);
		virtual void write(MTProtoStream* mtstream);
	protected:
		virtual void compileFlags();
	public:
		const TLVector<ImportedContact*>& imported() const;
		void setImported(const TLVector<ImportedContact*>& imported);
		const TLVector<TLLong>& retryContacts() const;
		void setRetryContacts(const TLVector<TLLong>& retry_contacts);
		const TLVector<User*>& users() const;
		void setUsers(const TLVector<User*>& users);

	signals:
		void importedChanged();
		void retryContactsChanged();
		void usersChanged();

	private:
		TLVector<ImportedContact*> _imported;
		TLVector<TLLong> _retry_contacts;
		TLVector<User*> _users;

};

#endif // CONTACTSIMPORTEDCONTACTS_H
