// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "reportreason.h"


ReportReason::ReportReason(QObject* parent) : TelegramObject(parent)
{
	
}

void ReportReason::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == ReportReason::ctorInputReportReasonSpam) ||
		 (this->_constructorid == ReportReason::ctorInputReportReasonViolence) ||
		 (this->_constructorid == ReportReason::ctorInputReportReasonPornography) ||
		 (this->_constructorid == ReportReason::ctorInputReportReasonOther));
	
	if(this->_constructorid == ReportReason::ctorInputReportReasonOther)
		this->_text = mtstream->readTLString();
}

void ReportReason::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == ReportReason::ctorInputReportReasonSpam) ||
		 (this->_constructorid == ReportReason::ctorInputReportReasonViolence) ||
		 (this->_constructorid == ReportReason::ctorInputReportReasonPornography) ||
		 (this->_constructorid == ReportReason::ctorInputReportReasonOther));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == ReportReason::ctorInputReportReasonOther)
		mtstream->writeTLString(this->_text);
}

void ReportReason::compileFlags() 
{
	
}

TLString ReportReason::text() const
{
	return this->_text;
}

void ReportReason::setText(TLString text) 
{
	if(this->_text == text)
		return;

	this->_text = text;
	emit textChanged();
}

