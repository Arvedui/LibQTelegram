// Generated by APIGenerator 1.0
// DO NOT EDIT!!!

#include "nearestdc.h"


NearestDc::NearestDc(QObject* parent) : TelegramObject(parent)
{
	this->_this_dc = 0;
	this->_nearest_dc = 0;
	this->_constructorid = NearestDc::CtorNearestDc;
}

void NearestDc::read(MTProtoStream* mtstream) 
{
	this->_constructorid = mtstream->readTLConstructor();
	
	Q_ASSERT((this->_constructorid == NearestDc::CtorNearestDc));
	
	if(this->_constructorid == NearestDc::CtorNearestDc)
	{
		this->_country = mtstream->readTLString();
		this->_this_dc = mtstream->readTLInt();
		this->_nearest_dc = mtstream->readTLInt();
	}
}

void NearestDc::write(MTProtoStream* mtstream) 
{
	Q_ASSERT((this->_constructorid == NearestDc::CtorNearestDc));
	
	this->compileFlags();
	mtstream->writeTLConstructor(this->_constructorid);
	
	if(this->_constructorid == NearestDc::CtorNearestDc)
	{
		mtstream->writeTLString(this->_country);
		mtstream->writeTLInt(this->_this_dc);
		mtstream->writeTLInt(this->_nearest_dc);
	}
}

void NearestDc::compileFlags() 
{
	
}

TLString NearestDc::country() const
{
	return this->_country;
}

void NearestDc::setCountry(TLString country) 
{
	if(this->_country == country)
		return;

	this->_country = country;
	emit countryChanged();
}

TLInt NearestDc::thisDc() const
{
	return this->_this_dc;
}

void NearestDc::setThisDc(TLInt this_dc) 
{
	if(this->_this_dc == this_dc)
		return;

	this->_this_dc = this_dc;
	emit thisDcChanged();
}

TLInt NearestDc::nearestDc() const
{
	return this->_nearest_dc;
}

void NearestDc::setNearestDc(TLInt nearest_dc) 
{
	if(this->_nearest_dc == nearest_dc)
		return;

	this->_nearest_dc = nearest_dc;
	emit nearestDcChanged();
}

