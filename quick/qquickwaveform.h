#ifndef QQUICKWAVEFORM_H
#define QQUICKWAVEFORM_H

#include <QQuickItem>
#include "../autogenerated/types/types.h"

class QQuickWaveform : public QQuickItem
{
    Q_OBJECT

    Q_PROPERTY(qreal contentWidth READ contentWidth NOTIFY contentWidthChanged)
    Q_PROPERTY(int barWidth READ barWidth WRITE setBarWidth NOTIFY barWidthChanged)
    Q_PROPERTY(QColor barColor READ barColor WRITE setBarColor NOTIFY barColorChanged)
    Q_PROPERTY(Message* message READ message WRITE setMessage NOTIFY messageChanged)

    public:
        QQuickWaveform(QQuickItem* parent = 0);
        qreal contentWidth() const;
        int barWidth() const;
        void setBarWidth(int barwidth);
        QColor barColor() const;
        void setBarColor(const QColor& barcolor);
        Message* message() const;
        void setMessage(Message* message);

    private:
        void waveRect(int i, QRectF& rect) const;
        void decodeWaveform(const QByteArray& encoded5bit);
        void findWaveform(TelegramObject* telegramobject);

    protected:
        virtual QSGNode* updatePaintNode(QSGNode *oldnode, UpdatePaintNodeData *);

    signals:
        void contentWidthChanged();
        void barWidthChanged();
        void barColorChanged();
        void messageChanged();

    private:
        QVector<uchar> _waveform;
        uchar _wavemax;
        int _barwidth;
        QColor _barcolor;
        Message* _message;
};

#endif // QQUICKWAVEFORM_H
