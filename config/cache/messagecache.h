#ifndef MESSAGECACHE_H
#define MESSAGECACHE_H

#include <QObject>
#include <QHash>
#include <QSet>
#include "../../types/basic.h"
#include "../../autogenerated/types/types.h"

class MessageCache : public QObject
{
    Q_OBJECT

    public:
        typedef TLVector<Message*> MessageList;

    public:
        explicit MessageCache(QObject *parent = 0);
        const MessageList& messages(Dialog* dialog);
        Message* message(TLInt messageid);
        void cache(const TLVector<Message*>& messages);
        void cache(Message* message);
        void load(TLInt dialogid);
        void load();
        void save(const QList<Dialog*>& dialogs) const;

     public slots:
        void edit(Message* message);

    private:
        void save(TLInt dialogid) const;
        void saveTop(const QList<Dialog*>& dialogs) const;
        void loadTop();

    private:
        QHash<TLInt, MessageList> _dialogmessages;
        QHash<TLInt, Message*> _messages;
        QHash<TLInt, Message*> _topmessages;
        QSet<TLInt> _cacheloaded;

    private:
        QString _msgsstoragepath;
};

#endif // MESSAGECACHE_H
