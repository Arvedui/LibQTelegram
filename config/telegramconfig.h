#ifndef TELEGRAMCONFIG_H
#define TELEGRAMCONFIG_H

#define TelegramConfig_clientState TelegramConfig::config()->updateState()
#define TelegramConfig_storagePath TelegramConfig::config()->storagePath()
#define TelegramConfig_save TelegramConfig::config()->save()
#define TelegramConfig_me TelegramConfig::config()->me()
#define TelegramConfig_instance TelegramConfig::config()

#define DCConfig_mainDcId (TelegramConfig::config() ? TelegramConfig::config()->mainDcId() : -1)
#define DCConfig_isLoggedIn (TelegramConfig::config() ? TelegramConfig::config()->isLoggedIn() : false)
#define DCConfig_fromDcId(dcid) TelegramConfig::config()->dcConfig(dcid)
#define DCConfig_fromDc(dc) DCConfig_fromDcId(dc->id())
#define DCConfig_fromSession(dcsession) DCConfig_fromDc(dcsession->dc())
#define DCConfig_setMainDc(dcid) TelegramConfig::config()->setMainDc(dcid)

#include <QString>
#include <QHash>
#include "../autogenerated/types/types.h"
#include "../types/basic.h"
#include "dcconfig.h"

class TelegramConfig
{
    private:
        TelegramConfig();

    public:
        static TelegramConfig* config();
        static TelegramConfig* init(TLInt layernum, TLInt apiid, const QString& apihash, const QString& publickey, const QString &phonenumber);

    public:
        int mainDcId() const;
        DCConfig& dcConfig(int dcid);
        DCConfig& setDcConfig(int dcid, bool ipv6);
        void setMainDc(int maindcid);
        UpdatesState* updateState();
        User* me();
        void save();
        void load();
        bool hasDC(int id);
        bool isLoggedIn() const;
        bool debugMode() const;
        TLInt layerNum() const;
        TLInt apiId() const;
        const QString& apiHash() const;
        const QString& publicKey() const;
        const QString& storagePath() const;
        const QString& deviceModel() const;
        const QString& osVersion() const;
        const QString& applicationVersion() const;
        const QString& phoneNumber() const;
        void setDebugMode(bool dbgmode);
        void setIpv6(bool ipv6);
        void setStoragePath(const QString& storagepath);
        void setDeviceModel(const QString& devicemodel);
        void setApplicationVersion(const QString& appversion);
        void setPhoneNumber(const QString& phonenumber);
        void setMe(User* me);

    private:
        void saveDCConfig();
        void loadDCConfig();
        void saveState();
        void loadState();
        void saveMe();
        void loadMe();
        void updateStoragePath(const QString& storagepath, const QString& phonenumber);
        void write(const QString& filename, const QByteArray &content);
        bool configExists(const QString& filename);
        QByteArray read(const QString& filename);

    private:
        bool _debugmode;
        bool _ipv6;
        TLInt _layernum;
        TLInt _apiid;
        QString _apihash;
        QString _publickey;
        QString _storagepath;
        QString _profilestoragepath;
        QString _devicemodel;
        QString _osversion;
        QString _appversion;
        QString _phonenumber;
        QHash<int, DCConfig> _dcconfig;
        QHash<int, DCConfig> _dcconfigipv6;
        UpdatesState* _updatesstate;
        User* _me;

    private:
        static const QString DCCONFIG_FILE;
        static const QString STATE_FILE;
        static const QString ME_FILE;
        static TelegramConfig* _config;
};

#endif // TELEGRAMCONFIG_H
